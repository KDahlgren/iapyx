define(write,{string,string,string,int});
define(ack_int,{string,string,string,int});
define(ack,{string,string,string,int});
define(missing_ack,{string,string,string,int});
define(tried,{string,string,int});
define(good,{string,int});
define(pre,{string,int});
define(post,{string,int});
define(timer_svc,{string,string,int,int});
define(member,{string,string,int});
define(clients,{string,string,int});
define(leader,{string,string,int});
define(zookeeper,{string,string,int});
define(timer_state,{string,string,int,int});
define(timeout,{string,string,int});
define(write_prov0,{string,string,string,string,int,int});
define(ack_int_prov1,{string,string,string,int,int});
define(ack_prov2,{string,string,string,int,int});
define(ack_int_prov3,{string,string,string,int,int});
define(write_prov4,{string,string,string,int,int});
define(ack_prov5,{string,string,string,int,int});
define(missing_ack_prov6,{string,string,string,int});
define(write_prov7,{string,string,string,int,int});
define(tried_prov8,{string,string,int,int});
define(tried_prov9,{string,string,int});
define(good_prov10,{string,string,int});
define(good_prov11,{string,string,int});
define(good_prov12,{string,string,string,int});
define(pre_prov13,{string,int});
define(post_prov14,{string,string,int});
define(timer_svc_prov15,{string,string,int,int});
define(member_prov16,{string,string,int,int});
define(clients_prov17,{string,string,string,int,int});
define(member_prov18,{string,string,int,int});
define(leader_prov19,{string,string,int,int});
define(clients_prov20,{string,string,int,int});
define(zookeeper_prov21,{string,string,int,int});
define(member_prov22,{string,string,string,int,int});
define(member_prov23,{string,string,string,int,int});
define(leader_prov24,{string,string,string,int,int});
define(leader_prov25,{string,string,string,int,int});
define(timer_state_prov26,{string,string,int,int,int,int});
define(timer_state_prov27,{string,string,int,int,int,int});
define(timeout_prov28,{string,string,int});
define(timer_cancel,{string,string,int});
define(begin,{string,int});
define(client,{string,int});
define(write_req,{string,string,int});
define(clock,{string,string,int,int});
define(crash,{string,string,int,int});
write(Next,Data,Origin,MRESERVED):-write(Origin,Data,Prev,NRESERVED),member(Origin,Next,NRESERVED),leader(Origin,Origin,NRESERVED),clock(Origin,Next,NRESERVED,MRESERVED),notin ack_int(Origin,Data,Next,NRESERVED);
ack_int(Origin,Data,Acker,MRESERVED):-write(Acker,Data,Origin,NRESERVED),clock(Acker,Origin,NRESERVED,MRESERVED),notin leader(Acker,Acker,NRESERVED);
ack(O,D,A,NRESERVED+1):-ack(O,D,A,NRESERVED),clock(O,_,NRESERVED,_);
ack_int(O,D,A,NRESERVED+1):-ack_int(O,D,A,NRESERVED),clock(O,_,NRESERVED,_);
write(N,D,O,NRESERVED+1):-write(N,D,O,NRESERVED),clock(N,_,NRESERVED,_);
ack(Origin,Data,Acker,MRESERVED):-leader(Acker,Acker,NRESERVED),write(Acker,Data,Origin,NRESERVED),Origin!=Acker,clock(Acker,Origin,NRESERVED,MRESERVED),notin missing_ack(Acker,Data,_,NRESERVED);
missing_ack(Leader,Data,Other,NRESERVED):-write(Leader,Data,_,NRESERVED),member(Leader,Other,NRESERVED),Leader!=Other,notin ack_int(Leader,Data,Other,NRESERVED);
write(M,D,O,MRESERVED):-write_req(O,D,NRESERVED),leader(O,M,NRESERVED),clock(O,M,NRESERVED,MRESERVED);
tried(C,D,NRESERVED+1):-tried(C,D,NRESERVED),clock(C,_,NRESERVED,_);
tried(C,D,NRESERVED):-write_req(C,D,NRESERVED);
good(D,NRESERVED):-ack("C",D,_,NRESERVED),write(R,D,_,NRESERVED),notin crash(R,R,_,NRESERVED);
good(D,NRESERVED):-tried(C,D,NRESERVED),notin ack(C,D,_,NRESERVED);
good(D,NRESERVED):-tried(C,D,NRESERVED),leader(C,L,NRESERVED),notin member(C,L,NRESERVED);
pre(X,NRESERVED):-ack(_,X,_,NRESERVED);
post(X,NRESERVED):-ack(_,X,_,NRESERVED),write(R,X,_,NRESERVED),notin crash(R,R,_,NRESERVED);
timer_svc(Z,Z,2,NRESERVED):-zookeeper(Z,Z,1),clock(Z,Z,NRESERVED,_);
member(Z,M,MRESERVED):-begin(M,NRESERVED),zookeeper(M,Z,NRESERVED),clock(M,Z,NRESERVED,MRESERVED);
clients(Z,C,MRESERVED):-client(C,NRESERVED),zookeeper(M,Z,NRESERVED),clock(C,Z,NRESERVED,MRESERVED);
member(Z,M,NRESERVED+1):-member(Z,M,NRESERVED),clock(Z,_,NRESERVED,_);
leader(Z,L,NRESERVED+1):-leader(Z,L,NRESERVED),clock(Z,_,NRESERVED,_);
clients(Z,C,NRESERVED+1):-clients(Z,C,NRESERVED),clock(Z,_,NRESERVED,_);
zookeeper(M,Z,NRESERVED+1):-zookeeper(M,Z,NRESERVED),clock(M,_,NRESERVED,_);
member(C,M,MRESERVED):-member(Z,M,NRESERVED),clients(Z,C,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,C,NRESERVED,MRESERVED);
member(A,M,MRESERVED):-member(Z,A,NRESERVED),member(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,A,NRESERVED,MRESERVED);
leader(M,L,MRESERVED):-leader(Z,L,NRESERVED),member(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,M,NRESERVED,MRESERVED);
leader(M,L,MRESERVED):-leader(Z,L,NRESERVED),clients(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,M,NRESERVED,MRESERVED);
timer_state(H,I,T-1,NRESERVED+1):-timer_svc(H,I,T,NRESERVED),clock(H,_,NRESERVED,_);
timer_state(H,I,T-1,NRESERVED+1):-timer_state(H,I,T,NRESERVED),T>1,clock(H,_,NRESERVED,_),notin timer_cancel(H,I,NRESERVED);
timeout(H,I,NRESERVED):-timer_state(H,I,1,NRESERVED);
write_prov0(Next,Data,Origin,Prev,NRESERVED,MRESERVED):-write(Origin,Data,Prev,NRESERVED),member(Origin,Next,NRESERVED),leader(Origin,Origin,NRESERVED),clock(Origin,Next,NRESERVED,MRESERVED),notin ack_int(Origin,Data,Next,NRESERVED);
ack_int_prov1(Origin,Data,Acker,NRESERVED,MRESERVED):-write(Acker,Data,Origin,NRESERVED),clock(Acker,Origin,NRESERVED,MRESERVED),notin leader(Acker,Acker,NRESERVED);
ack_prov2(O,D,A,NRESERVED,NRESERVED+1):-ack(O,D,A,NRESERVED),clock(O,_,NRESERVED,_);
ack_int_prov3(O,D,A,NRESERVED,NRESERVED+1):-ack_int(O,D,A,NRESERVED),clock(O,_,NRESERVED,_);
write_prov4(N,D,O,NRESERVED,NRESERVED+1):-write(N,D,O,NRESERVED),clock(N,_,NRESERVED,_);
ack_prov5(Origin,Data,Acker,NRESERVED,MRESERVED):-leader(Acker,Acker,NRESERVED),write(Acker,Data,Origin,NRESERVED),Origin!=Acker,clock(Acker,Origin,NRESERVED,MRESERVED),notin missing_ack(Acker,Data,_,NRESERVED);
missing_ack_prov6(Leader,Data,Other,NRESERVED):-write(Leader,Data,_,NRESERVED),member(Leader,Other,NRESERVED),Leader!=Other,notin ack_int(Leader,Data,Other,NRESERVED);
write_prov7(M,D,O,NRESERVED,MRESERVED):-write_req(O,D,NRESERVED),leader(O,M,NRESERVED),clock(O,M,NRESERVED,MRESERVED);
tried_prov8(C,D,NRESERVED,NRESERVED+1):-tried(C,D,NRESERVED),clock(C,_,NRESERVED,_);
tried_prov9(C,D,NRESERVED):-write_req(C,D,NRESERVED);
good_prov10(D,R,NRESERVED):-ack("C",D,_,NRESERVED),write(R,D,_,NRESERVED),notin crash(R,R,_,NRESERVED);
good_prov11(D,C,NRESERVED):-tried(C,D,NRESERVED),notin ack(C,D,_,NRESERVED);
good_prov12(D,C,L,NRESERVED):-tried(C,D,NRESERVED),leader(C,L,NRESERVED),notin member(C,L,NRESERVED);
pre_prov13(X,NRESERVED):-ack(_,X,_,NRESERVED);
post_prov14(X,R,NRESERVED):-ack(_,X,_,NRESERVED),write(R,X,_,NRESERVED),notin crash(R,R,_,NRESERVED);
timer_svc_prov15(Z,Z,2,NRESERVED):-zookeeper(Z,Z,1),clock(Z,Z,NRESERVED,_);
member_prov16(Z,M,NRESERVED,MRESERVED):-begin(M,NRESERVED),zookeeper(M,Z,NRESERVED),clock(M,Z,NRESERVED,MRESERVED);
clients_prov17(Z,C,M,NRESERVED,MRESERVED):-client(C,NRESERVED),zookeeper(M,Z,NRESERVED),clock(C,Z,NRESERVED,MRESERVED);
member_prov18(Z,M,NRESERVED,NRESERVED+1):-member(Z,M,NRESERVED),clock(Z,_,NRESERVED,_);
leader_prov19(Z,L,NRESERVED,NRESERVED+1):-leader(Z,L,NRESERVED),clock(Z,_,NRESERVED,_);
clients_prov20(Z,C,NRESERVED,NRESERVED+1):-clients(Z,C,NRESERVED),clock(Z,_,NRESERVED,_);
zookeeper_prov21(M,Z,NRESERVED,NRESERVED+1):-zookeeper(M,Z,NRESERVED),clock(M,_,NRESERVED,_);
member_prov22(C,M,Z,NRESERVED,MRESERVED):-member(Z,M,NRESERVED),clients(Z,C,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,C,NRESERVED,MRESERVED);
member_prov23(A,M,Z,NRESERVED,MRESERVED):-member(Z,A,NRESERVED),member(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,A,NRESERVED,MRESERVED);
leader_prov24(M,L,Z,NRESERVED,MRESERVED):-leader(Z,L,NRESERVED),member(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,M,NRESERVED,MRESERVED);
leader_prov25(M,L,Z,NRESERVED,MRESERVED):-leader(Z,L,NRESERVED),clients(Z,M,NRESERVED),zookeeper(Z,Z,NRESERVED),timeout(Z,Z,NRESERVED),clock(Z,M,NRESERVED,MRESERVED);
timer_state_prov26(H,I,T-1,T,NRESERVED,NRESERVED+1):-timer_svc(H,I,T,NRESERVED),clock(H,_,NRESERVED,_);
timer_state_prov27(H,I,T-1,T,NRESERVED,NRESERVED+1):-timer_state(H,I,T,NRESERVED),T>1,clock(H,_,NRESERVED,_),notin timer_cancel(H,I,NRESERVED);
timeout_prov28(H,I,NRESERVED):-timer_state(H,I,1,NRESERVED);
timer_cancel("somestring","somestring",1);
zookeeper("a","Z",1);
zookeeper("b","Z",1);
zookeeper("c","Z",1);
zookeeper("C","Z",1);
zookeeper("Z","Z",1);
begin("a",1);
begin("b",1);
begin("c",1);
client("C",1);
leader("Z","a",1);
member("Z","a",1);
write_req("C","Data1",2);
write_req("C","Data1",3);
write_req("C","Data1",4);
crash("NULL","NULL",99999999,99999999);
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
