define(put_log,{string,string,int,int});
define(good,{string,int,int});
define(alive,{string,string,int});
define(both_alive,{string,int});
define(pre,{string,int});
define(post,{string,int});
define(dispatch,{string,string,int,string,int});
define(send,{string,string,int,string,int});
define(advance,{string,string,int});
define(ack,{string,string,int,string,int});
define(event_1,{string,string,int});
define(event_2,{string,string,int});
define(status,{string,string,string,int});
define(conn,{string,string,string,int});
define(reverse,{string,string,int});
define(t_fail,{string,int});
define(del,{string,string,int});
define(put,{string,string,int,int,int});
define(other,{string,string,string,int});
define(member,{string,string,int});
define(fail_event,{string,string,string,int});
define(fail_log,{string,string,string,int});
define(fail,{string,string,int});
define(watch_state,{string,string,int,int});
define(hb_req,{string,string,int});
define(hb_state,{string,string,int,int});
define(heartbeat,{string,string,int,int});
define(hb_log,{string,string,int,int});
define(aggs,{string,string,int,int});
define(failed,{string,string,int});
define(buf,{string,string,int,int,int});
define(acked,{string,string,int,string,int});
define(bot,{string,string,int,int});
define(advanced,{string,string,int,int});
define(peek,{string,string,int,string,int});
define(dest,{string,string,int});
define(put_log_prov0,{string,string,int,int});
define(put_log_prov1,{string,string,int,int,int});
define(good_prov2,{string,int,int});
define(good_prov3,{string,int,int});
define(good_prov4,{string,int,string,int});
define(alive_prov5,{string,string,int});
define(both_alive_prov6,{string,int});
define(pre_prov7,{string,int});
define(post_prov8,{string,int});
define(dispatch_prov9,{string,string,int,string,int});
define(send_prov10,{string,string,int,string,int,int});
define(advance_prov11,{string,string,int});
define(ack_prov12,{string,string,int,string,int});
define(ack_prov13,{string,string,int,string,int});
define(event_1_prov14,{string,string,int});
define(event_2_prov15,{string,string,string,int});
define(status_prov16,{string,string,string,int,int});
define(conn_prov17,{string,string,string,int,int});
define(reverse_prov18,{string,string,int,int});
define(status_prov19,{string,string,string,int,int});
define(conn_prov20,{string,string,string,int,int});
define(conn_prov21,{string,string,string,int});
define(t_fail_prov22,{string,int});
define(del_prov23,{string,string,int,int});
define(put_prov24,{string,string,int,int,int});
define(other_prov25,{string,string,string,int,int});
define(member_prov26,{string,string,int,int});
define(fail_event_prov27,{string,string,string,int});
define(fail_log_prov28,{string,string,string,int,int});
define(fail_log_prov29,{string,string,string,int,int});
define(fail_prov30,{string,string,string,int,int});
define(watch_state_prov31,{string,string,int,int,int,int});
define(watch_state_prov32,{string,string,int,int});
define(hb_req_prov33,{string,string,int,int});
define(hb_state_prov34,{string,string,int,int,int});
define(heartbeat_prov35,{string,string,int,int,int});
define(hb_state_prov36,{string,string,int,int,int,int});
define(hb_log_prov37,{string,string,int,int});
define(hb_log_prov38,{string,string,int,int,int});
define(aggs_vars,{string,string,int,int});
define(aggs_prov39,{string,string,int,int});
define(failed_prov40,{string,string,int,int,int});
define(buf_prov41,{string,string,int,int,int});
define(buf_prov42,{string,string,int,int,int,int});
define(acked_prov43,{string,string,int,string,int});
define(acked_prov44,{string,string,int,string,int,int});
define(bot_vars,{string,string,int,int});
define(bot_prov45,{string,string,int,int});
define(advanced_prov46,{string,string,int,int,int});
define(advanced_prov47,{string,string,int,int,int});
define(peek_prov48,{string,string,int,string,int});
define(dest_prov49,{string,string,int,int});
define(watch,{string,string,int});
define(clock,{string,string,int,int});
define(crash,{string,string,int,int});
conn("i","pc","SEND",1);
conn("i","sc","SEND",1);
conn("i","pc","ACK",1);
conn("i","sc","ACK",1);
status("i","pc","ACTIVE",1);
status("i","sc","ACTIVE",1);
del("i","PRIM|SEC",1);
dest("i","pc",1);
dest("i","sc",1);
conn("pc","e","SEND",1);
status("pc","e","ACTIVE",1);
status("pc","i","ACTIVE",1);
dest("pc","e",1);
conn("pc","i","SEND",1);
conn("sc","e","ACK",1);
status("sc","e","ACTIVE",1);
status("sc","i","ACTIVE",1);
dest("sc","e",1);
conn("e","sc","ACK",1);
conn("e","sc","SEND",1);
status("e","sc","ACTIVE",1);
dest("e","sc",1);
conn("e","pc","RECV",1);
other("e","pc","sc",1);
other("e","sc","pc",1);
other("i","sc","pc",1);
other("i","pc","sc",1);
watch("Z","pc",1);
watch("Z","sc",1);
member("Z","i",1);
member("Z","e",1);
member("Z","pc",1);
member("Z","sc",1);
put("i","foo",1,0,1);
put("i","bar",2,0,1);
put("i","baz",3,0,1);
put("i","qux",4,0,2);
put_log(E,X,I,NRESERVED):-put(E,X,I,_,NRESERVED);
put_log(E,X,I,MRESERVED):-put_log(E,X,I,NRESERVED),clock(E,_,NRESERVED,MRESERVED);
good(X,I,NRESERVED):-put_log("e",X,I,NRESERVED);
good(X,I,NRESERVED):-put_log(_,X,I,NRESERVED),crash(_,"i",_,NRESERVED);
good(X,I,NRESERVED):-put_log(A,X,I,NRESERVED),crash(A,"e",_,NRESERVED);
alive(M,X,NRESERVED):-member(_,M,NRESERVED),put_log(M,X,_,NRESERVED),notin crash(_,M,_,NRESERVED);
both_alive(X,NRESERVED):-alive("i",X,NRESERVED),alive("e",X,NRESERVED);
pre(X,NRESERVED):-alive(_,X,NRESERVED);
post(X,NRESERVED):-put_log("e",X,_,NRESERVED);
dispatch(Host,Dest,Sn,Data,NRESERVED):-peek(Host,Dest,Sn,Data,NRESERVED),status(Host,Dest,"ACTIVE",NRESERVED),conn(Host,Dest,"SEND",NRESERVED);
send(Dest,Host,Sn,Data,MRESERVED):-dispatch(Host,Dest,Sn,Data,NRESERVED),clock(Host,Dest,NRESERVED,MRESERVED);
advance(Host,Dest,NRESERVED):-dispatch(Host,Dest,_,_,NRESERVED);
ack(Host,Dest,Sn,Markings,NRESERVED):-dispatch(Host,Dest,Sn,_,NRESERVED),del(Host,Markings,NRESERVED),notin conn(Host,Dest,"ACK",NRESERVED);
ack(Host,Dest,Sn,Markings,NRESERVED):-dispatch(Host,Dest,Sn,_,NRESERVED),del(Host,Markings,NRESERVED),send(Host,Dest,Sn,_,NRESERVED);
event_1(Host,Dest,NRESERVED):-fail(Host,Dest,NRESERVED),notin status(Host,Dest,"DEAD",NRESERVED);
event_2(Host,Other,NRESERVED):-event_1(Host,Dest,NRESERVED),other(Host,Dest,Other,NRESERVED),notin conn(Host,Other,"RECV",NRESERVED);
status(Host,Dest,"DEAD",MRESERVED):-event_1(Host,Dest,NRESERVED),clock(Host,_,NRESERVED,MRESERVED);
conn(Host,Dest,"RECV",MRESERVED):-event_2(Host,Dest,NRESERVED),clock(Host,_,NRESERVED,MRESERVED);
reverse(Other,Host,MRESERVED):-event_2(Host,Other,NRESERVED),clock(Host,Other,NRESERVED,MRESERVED);
status(H,D,S,MRESERVED):-status(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin event_1(H,D,NRESERVED);
conn(H,D,S,MRESERVED):-conn(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin del_conn(H,D,S,NRESERVED);
conn(Host,Dest,"SEND",NRESERVED):-reverse(Host,Dest,NRESERVED);
t_fail(Host,NRESERVED):-fail(Host,_,NRESERVED);
del(H,M,MRESERVED):-del(H,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
put(H,D,S,0,NRESERVED):-send(H,_,S,D,NRESERVED);
other(H,A,B,MRESERVED):-other(H,A,B,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
member(Z,N,MRESERVED):-member(Z,N,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail_event(Z,N,H,NRESERVED):-failed(Z,H,NRESERVED),member(Z,N,NRESERVED);
fail_log(Z,N,H,MRESERVED):-fail_event(Z,N,H,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail_log(Z,N,H,MRESERVED):-fail_log(Z,N,H,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail(N,H,MRESERVED):-fail_event(Z,N,H,NRESERVED),clock(Z,N,NRESERVED,MRESERVED),notin fail_log(Z,N,H,NRESERVED);
watch_state(F,H,S+1,MRESERVED):-watch_state(F,H,S,NRESERVED),clock(F,_,NRESERVED,MRESERVED);
watch_state(F,H,0,NRESERVED):-watch(F,H,NRESERVED);
hb_req(F,H,MRESERVED):-watch_state(H,F,_,NRESERVED),clock(H,F,NRESERVED,MRESERVED),notin hb_log(H,F,_,NRESERVED);
hb_state(F,H,0,MRESERVED):-hb_req(F,H,NRESERVED),clock(F,_,NRESERVED,MRESERVED),notin hb_state(F,H,_,NRESERVED);
heartbeat(H,F,N,MRESERVED):-hb_state(F,H,N,NRESERVED),clock(F,H,NRESERVED,MRESERVED);
hb_state(F,H,N+1,MRESERVED):-hb_state(F,H,N,NRESERVED),clock(F,_,NRESERVED,MRESERVED);
hb_log(H,F,N,NRESERVED):-heartbeat(H,F,N,NRESERVED);
hb_log(H,F,N,MRESERVED):-hb_log(H,F,N,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
aggs(H,F,max<N>,NRESERVED):-aggs_vars(H,F,N,NRESERVED);
failed(H,F,NRESERVED):-aggs(H,F,M,NRESERVED),watch_state(H,F,S,NRESERVED),S>M+3;
buf(Host,Data,Sn,Markings,NRESERVED):-put(Host,Data,Sn,Markings,NRESERVED);
buf(H,D,S,M,MRESERVED):-buf(H,D,S,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin reset(H,D,NRESERVED);
acked(H,Dest,Sn,Markings,NRESERVED):-ack(H,Dest,Sn,Markings,NRESERVED);
acked(H,Dest,Sn,M,MRESERVED):-acked(H,Dest,Sn,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
bot(H,Dest,min<Sn>,NRESERVED):-bot_vars(H,Dest,Sn,NRESERVED);
advanced(H,D,Sn,MRESERVED):-advance(H,D,NRESERVED),bot(H,D,Sn,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
advanced(H,D,S,MRESERVED):-advanced(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
peek(H,Dest,Sn,Data,NRESERVED):-bot(H,Dest,Sn,NRESERVED),buf(H,Data,Sn,_,NRESERVED);
dest(H,D,MRESERVED):-dest(H,D,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
put_log_prov0(E,X,I,NRESERVED):-put(E,X,I,_,NRESERVED);
put_log_prov1(E,X,I,NRESERVED,MRESERVED):-put_log(E,X,I,NRESERVED),clock(E,_,NRESERVED,MRESERVED);
good_prov2(X,I,NRESERVED):-put_log("e",X,I,NRESERVED);
good_prov3(X,I,NRESERVED):-put_log(_,X,I,NRESERVED),crash(_,"i",_,NRESERVED);
good_prov4(X,I,A,NRESERVED):-put_log(A,X,I,NRESERVED),crash(A,"e",_,NRESERVED);
alive_prov5(M,X,NRESERVED):-member(_,M,NRESERVED),put_log(M,X,_,NRESERVED),notin crash(_,M,_,NRESERVED);
both_alive_prov6(X,NRESERVED):-alive("i",X,NRESERVED),alive("e",X,NRESERVED);
pre_prov7(X,NRESERVED):-alive(_,X,NRESERVED);
post_prov8(X,NRESERVED):-put_log("e",X,_,NRESERVED);
dispatch_prov9(Host,Dest,Sn,Data,NRESERVED):-peek(Host,Dest,Sn,Data,NRESERVED),status(Host,Dest,"ACTIVE",NRESERVED),conn(Host,Dest,"SEND",NRESERVED);
send_prov10(Dest,Host,Sn,Data,NRESERVED,MRESERVED):-dispatch(Host,Dest,Sn,Data,NRESERVED),clock(Host,Dest,NRESERVED,MRESERVED);
advance_prov11(Host,Dest,NRESERVED):-dispatch(Host,Dest,_,_,NRESERVED);
ack_prov12(Host,Dest,Sn,Markings,NRESERVED):-dispatch(Host,Dest,Sn,_,NRESERVED),del(Host,Markings,NRESERVED),notin conn(Host,Dest,"ACK",NRESERVED);
ack_prov13(Host,Dest,Sn,Markings,NRESERVED):-dispatch(Host,Dest,Sn,_,NRESERVED),del(Host,Markings,NRESERVED),send(Host,Dest,Sn,_,NRESERVED);
event_1_prov14(Host,Dest,NRESERVED):-fail(Host,Dest,NRESERVED),notin status(Host,Dest,"DEAD",NRESERVED);
event_2_prov15(Host,Other,Dest,NRESERVED):-event_1(Host,Dest,NRESERVED),other(Host,Dest,Other,NRESERVED),notin conn(Host,Other,"RECV",NRESERVED);
status_prov16(Host,Dest,"DEAD",NRESERVED,MRESERVED):-event_1(Host,Dest,NRESERVED),clock(Host,_,NRESERVED,MRESERVED);
conn_prov17(Host,Dest,"RECV",NRESERVED,MRESERVED):-event_2(Host,Dest,NRESERVED),clock(Host,_,NRESERVED,MRESERVED);
reverse_prov18(Other,Host,NRESERVED,MRESERVED):-event_2(Host,Other,NRESERVED),clock(Host,Other,NRESERVED,MRESERVED);
status_prov19(H,D,S,NRESERVED,MRESERVED):-status(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin event_1(H,D,NRESERVED);
conn_prov20(H,D,S,NRESERVED,MRESERVED):-conn(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin del_conn(H,D,S,NRESERVED);
conn_prov21(Host,Dest,"SEND",NRESERVED):-reverse(Host,Dest,NRESERVED);
t_fail_prov22(Host,NRESERVED):-fail(Host,_,NRESERVED);
del_prov23(H,M,NRESERVED,MRESERVED):-del(H,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
put_prov24(H,D,S,0,NRESERVED):-send(H,_,S,D,NRESERVED);
other_prov25(H,A,B,NRESERVED,MRESERVED):-other(H,A,B,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
member_prov26(Z,N,NRESERVED,MRESERVED):-member(Z,N,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail_event_prov27(Z,N,H,NRESERVED):-failed(Z,H,NRESERVED),member(Z,N,NRESERVED);
fail_log_prov28(Z,N,H,NRESERVED,MRESERVED):-fail_event(Z,N,H,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail_log_prov29(Z,N,H,NRESERVED,MRESERVED):-fail_log(Z,N,H,NRESERVED),clock(Z,_,NRESERVED,MRESERVED);
fail_prov30(N,H,Z,NRESERVED,MRESERVED):-fail_event(Z,N,H,NRESERVED),clock(Z,N,NRESERVED,MRESERVED),notin fail_log(Z,N,H,NRESERVED);
watch_state_prov31(F,H,S+1,S,NRESERVED,MRESERVED):-watch_state(F,H,S,NRESERVED),clock(F,_,NRESERVED,MRESERVED);
watch_state_prov32(F,H,0,NRESERVED):-watch(F,H,NRESERVED);
hb_req_prov33(F,H,NRESERVED,MRESERVED):-watch_state(H,F,_,NRESERVED),clock(H,F,NRESERVED,MRESERVED),notin hb_log(H,F,_,NRESERVED);
hb_state_prov34(F,H,0,NRESERVED,MRESERVED):-hb_req(F,H,NRESERVED),clock(F,_,NRESERVED,MRESERVED),notin hb_state(F,H,_,NRESERVED);
heartbeat_prov35(H,F,N,NRESERVED,MRESERVED):-hb_state(F,H,N,NRESERVED),clock(F,H,NRESERVED,MRESERVED);
hb_state_prov36(F,H,N+1,N,NRESERVED,MRESERVED):-hb_state(F,H,N,NRESERVED),clock(F,_,NRESERVED,MRESERVED);
hb_log_prov37(H,F,N,NRESERVED):-heartbeat(H,F,N,NRESERVED);
hb_log_prov38(H,F,N,NRESERVED,MRESERVED):-hb_log(H,F,N,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
aggs_vars(H,F,N,NRESERVED):-hb_log(H,F,N,NRESERVED);
aggs_prov39(H,F,max<N>,NRESERVED):-aggs_vars(H,F,N,NRESERVED);
failed_prov40(H,F,M,S,NRESERVED):-aggs(H,F,M,NRESERVED),watch_state(H,F,S,NRESERVED),S>M+3;
buf_prov41(Host,Data,Sn,Markings,NRESERVED):-put(Host,Data,Sn,Markings,NRESERVED);
buf_prov42(H,D,S,M,NRESERVED,MRESERVED):-buf(H,D,S,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED),notin reset(H,D,NRESERVED);
acked_prov43(H,Dest,Sn,Markings,NRESERVED):-ack(H,Dest,Sn,Markings,NRESERVED);
acked_prov44(H,Dest,Sn,M,NRESERVED,MRESERVED):-acked(H,Dest,Sn,M,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
bot_vars(H,Dest,Sn,NRESERVED):-buf(H,_,Sn,_,NRESERVED),dest(H,Dest,NRESERVED),notin advanced(H,Dest,Sn,NRESERVED);
bot_prov45(H,Dest,min<Sn>,NRESERVED):-bot_vars(H,Dest,Sn,NRESERVED);
advanced_prov46(H,D,Sn,NRESERVED,MRESERVED):-advance(H,D,NRESERVED),bot(H,D,Sn,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
advanced_prov47(H,D,S,NRESERVED,MRESERVED):-advanced(H,D,S,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
peek_prov48(H,Dest,Sn,Data,NRESERVED):-bot(H,Dest,Sn,NRESERVED),buf(H,Data,Sn,_,NRESERVED);
dest_prov49(H,D,NRESERVED,MRESERVED):-dest(H,D,NRESERVED),clock(H,_,NRESERVED,MRESERVED);
crash("NULL","NULL",99999999,99999999);
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
