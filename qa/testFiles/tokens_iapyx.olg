define(node,{string,string,int});
define(token,{string,int,int});
define(wait,{string,int,int});
define(send_token,{string,string,int,int});
define(ack,{string,int,int});
define(win,{string,int,int});
define(skip,{string,string,int});
define(timer_svc,{string,int,int,int});
define(post,{string,int,int});
define(pre,{string,int,int});
define(good,{string,int,int});
define(timer_state,{string,int,int,int});
define(timeout,{string,int,int});
define(node_prov0,{string,string,int,int});
define(token_prov1,{string,int,int});
define(wait_prov2,{string,int,int,int});
define(wait_prov3,{string,int,int,int});
define(send_token_prov4,{string,string,int,int,int});
define(ack_prov5,{string,int,string,int,int});
define(token_prov6,{string,int,int});
define(token_prov7,{string,int,int,int});
define(win_prov8,{string,int,int});
define(win_prov9,{string,int,int,int});
define(skip_prov10,{string,string,int,int});
define(timer_svc_prov11,{string,int,int,int});
define(send_token_prov12,{string,string,int,int,int});
define(post_prov13,{string,int,int});
define(pre_prov14,{string,int,int});
define(good_prov15,{string,int,int});
define(timer_state_prov16,{string,int,int,int,int,int});
define(timer_state_prov17,{string,int,int,int,int,int});
define(timeout_prov18,{string,int,int});
define(begin,{string,int,int});
define(clock,{string,string,int,int});
define(crash,{string,string,int});
node("a","b",1);
node("b","c",1);
node("c","d",1);
node("d","a",1);
skip("a","c",1);
skip("b","d",1);
skip("c","a",1);
skip("d","b",1);
begin("a",1,1);
node(H,N,MRESERVED) :-  node(H,N,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
token(H,T,NRESERVED) :-  begin(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
wait(H,T,MRESERVED) :-  begin(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
wait(H,T,MRESERVED) :-  wait(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
send_token(To,From,Token,MRESERVED) :-  token(From,Token,NRESERVED), node(From,To,NRESERVED), clock(From,To,NRESERVED,MRESERVED),notin win(From,Token,NRESERVED) ;
ack(F,T,MRESERVED) :-  send_token(H,F,T,NRESERVED), clock(H,F,NRESERVED,MRESERVED) ;
token(H,T,NRESERVED) :-  send_token(H,_,T,NRESERVED), clock(H,H,NRESERVED,_) ;
token(H,T,MRESERVED) :-  token(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin ack(H,T,NRESERVED) ;
win(H,T,NRESERVED) :-  wait(H,T,NRESERVED), send_token(H,_,T,NRESERVED), clock(H,H,NRESERVED,_) ;
win(H,T,MRESERVED) :-  win(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
skip(N,S,MRESERVED) :-  skip(N,S,NRESERVED), clock(N,_,NRESERVED,MRESERVED) ;
timer_svc(N,T,2,NRESERVED) :-  token(N,T,NRESERVED), clock(N,N,NRESERVED,_) ;
send_token(To,From,Token,MRESERVED) :-  token(From,Token,NRESERVED), skip(From,To,NRESERVED), timeout(From,Token,NRESERVED), clock(From,To,NRESERVED,MRESERVED),notin win(From,Token,NRESERVED) ;
post(H,T,NRESERVED) :-  win(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
pre(H,T,NRESERVED) :-  begin(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
good(H,T,NRESERVED) :-  win(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
timer_state(H,I,T-1,MRESERVED) :-  timer_svc(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
timer_state(H,I,T-1,MRESERVED) :-  timer_state(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin timer_cancel(H,I,NRESERVED),T>1 ;
timeout(H,I,NRESERVED) :-  timer_state(H,I,1,NRESERVED), clock(H,H,NRESERVED,_) ;
node_prov0(H,N,NRESERVED,MRESERVED) :-  node(H,N,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
token_prov1(H,T,NRESERVED) :-  begin(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
wait_prov2(H,T,NRESERVED,MRESERVED) :-  begin(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
wait_prov3(H,T,NRESERVED,MRESERVED) :-  wait(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
send_token_prov4(To,From,Token,NRESERVED,MRESERVED) :-  token(From,Token,NRESERVED), node(From,To,NRESERVED), clock(From,To,NRESERVED,MRESERVED),notin win(From,Token,NRESERVED) ;
ack_prov5(F,T,H,NRESERVED,MRESERVED) :-  send_token(H,F,T,NRESERVED), clock(H,F,NRESERVED,MRESERVED) ;
token_prov6(H,T,NRESERVED) :-  send_token(H,_,T,NRESERVED), clock(H,H,NRESERVED,_) ;
token_prov7(H,T,NRESERVED,MRESERVED) :-  token(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin ack(H,T,NRESERVED) ;
win_prov8(H,T,NRESERVED) :-  wait(H,T,NRESERVED), send_token(H,_,T,NRESERVED), clock(H,H,NRESERVED,_) ;
win_prov9(H,T,NRESERVED,MRESERVED) :-  win(H,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
skip_prov10(N,S,NRESERVED,MRESERVED) :-  skip(N,S,NRESERVED), clock(N,_,NRESERVED,MRESERVED) ;
timer_svc_prov11(N,T,2,NRESERVED) :-  token(N,T,NRESERVED), clock(N,N,NRESERVED,_) ;
send_token_prov12(To,From,Token,NRESERVED,MRESERVED) :-  token(From,Token,NRESERVED), skip(From,To,NRESERVED), timeout(From,Token,NRESERVED), clock(From,To,NRESERVED,MRESERVED),notin win(From,Token,NRESERVED) ;
post_prov13(H,T,NRESERVED) :-  win(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
pre_prov14(H,T,NRESERVED) :-  begin(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
good_prov15(H,T,NRESERVED) :-  win(H,T,NRESERVED), clock(H,H,NRESERVED,_) ;
timer_state_prov16(H,I,T-1,T,NRESERVED,MRESERVED) :-  timer_svc(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
timer_state_prov17(H,I,T-1,T,NRESERVED,MRESERVED) :-  timer_state(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin timer_cancel(H,I,NRESERVED),T>1 ;
timeout_prov18(H,I,NRESERVED) :-  timer_state(H,I,1,NRESERVED), clock(H,H,NRESERVED,_) ;
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
crash("NULL","NULL",99999999);
