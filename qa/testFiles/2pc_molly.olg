define(prepared, {string, string, string, string, int});
define(decision, {string, string, string, int});
define(vote_prov14, {string, string, string, string, int, int});
define(decision_prov19, {string, string, string, int});
define(commit_prov6, {string, string, int, string, int});
define(abort_prov7, {string, string, int, string, int});
define(prepared_prov9, {string, string, string, string, int});
define(running_prov4, {string, string, int});
define(prepare_prov0, {string, string, string, int, int});
define(missing_vote_prov3, {string, string, string, int});
define(running, {string, string, int});
define(clock, {string, string, int, int});
define(disagree_prov20, {string, string, string, int});
define(prepare, {string, string, string, int});
define(abort_prov12, {string, string, int, int});
define(disagree, {string, int});
define(decision_prov18, {string, string, string, int});
define(begin, {string, string, int});
define(pre, {string, string, int});
define(post_prov17, {string, string, string, string, int});
define(commit_prov13, {string, string, int, int});
define(agent, {string, string, int});
define(can_prov11, {string, string, int, int});
define(commit, {string, string, int});
define(pre_prov16, {string, string, int});
define(prepared_prov15, {string, string, string, string, int, int});
define(vote_prov8, {string, string, string, string, int, int});
define(agent_prov10, {string, string, int, int});
define(crash, {string, string, int, int});
define(vote, {string, string, string, string, int});
define(running_prov5, {string, string, int, int});
define(can, {string, string, int});
define(abort_prov1, {string, string, int, int});
define(missing_vote, {string, string, int});
define(commit_prov2, {string, string, int, int});
define(abort, {string, string, int});
define(pre_prov21, {string, string, int});
define(post, {string, string, int});
define(post_prov22, {string, string, int});
begin("C", "hello", 1);
agent("C", "a", 1);
agent("C", "b", 1);
agent("C", "d", 1);
agent("a", "b", 1);
agent("a", "d", 1);
agent("b", "a", 1);
agent("b", "d", 1);
agent("d", "a", 1);
agent("d", "b", 1);
can("a", "hello", 1);
can("b", "hello", 1);
can("d", "hello", 1);
prepare(Agent, Coord, Xact, MRESERVED) :- running(Coord, Xact, NRESERVED), agent(Coord, Agent, NRESERVED), clock(Coord, Agent, NRESERVED, MRESERVED);
abort(C, X, NRESERVED + 1) :- vote(C, _, X, "N", NRESERVED), clock(C, _, NRESERVED, _);
commit(C, X, NRESERVED + 1) :- vote(C, _, X, "Y", NRESERVED), clock(C, _, NRESERVED, _), notin missing_vote(C, X, NRESERVED);
missing_vote(C, X, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin vote(C, A, X, "Y", NRESERVED);
running(Coord, Xact, NRESERVED) :- begin(Coord, Xact, NRESERVED), clock(Coord, Coord, NRESERVED, _);
running(C, X, NRESERVED + 1) :- running(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED), notin abort(C, X, NRESERVED);
commit(A, X, MRESERVED) :- commit(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
abort(A, X, MRESERVED) :- abort(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
vote(Coord, Agent, Xact, "Y", MRESERVED) :- prepare(Agent, Coord, Xact, NRESERVED), can(Agent, Xact, NRESERVED), clock(Agent, Coord, NRESERVED, MRESERVED);
prepared(A, C, X, "Y", NRESERVED) :- prepare(A, C, X, NRESERVED), can(A, X, NRESERVED), clock(A, A, NRESERVED, _);
agent(C, A, NRESERVED + 1) :- agent(C, A, NRESERVED), clock(C, _, NRESERVED, _);
can(A, X, NRESERVED + 1) :- can(A, X, NRESERVED), clock(A, _, NRESERVED, _);
abort(C, X, NRESERVED + 1) :- abort(C, X, NRESERVED), clock(C, _, NRESERVED, _);
commit(C, X, NRESERVED + 1) :- commit(C, X, NRESERVED), clock(C, _, NRESERVED, _);
vote(C, A, X, S, NRESERVED + 1) :- vote(C, A, X, S, NRESERVED), clock(C, _, NRESERVED, _);
prepared(C, A, X, Y, NRESERVED + 1) :- prepared(C, A, X, Y, NRESERVED), clock(C, _, NRESERVED, _);
pre("termination", X, NRESERVED) :- prepared(_, _, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post("termination", X, NRESERVED) :- decision(A1, X, _, NRESERVED), decision(A2, X, _, NRESERVED), A1 != A2, clock(A1, A1, NRESERVED, _);
decision(C, X, "c", NRESERVED) :- commit(C, X, NRESERVED), clock(C, C, NRESERVED, _);
decision(C, X, "a", NRESERVED) :- abort(C, X, NRESERVED), clock(C, C, NRESERVED, _);
disagree(X, NRESERVED) :- decision(_, X, V1, NRESERVED), decision(_, X, V2, NRESERVED), V1 != V2, clock(_, _, NRESERVED, _);
pre("decide", X, NRESERVED) :- decision(_, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post("decide", X, NRESERVED) :- decision(_, X, V, NRESERVED), clock(_, _, NRESERVED, _), notin disagree(X, NRESERVED);
prepare_prov0(Agent, Coord, Xact, NRESERVED, MRESERVED) :- running(Coord, Xact, NRESERVED), agent(Coord, Agent, NRESERVED), clock(Coord, Agent, NRESERVED, MRESERVED);
abort_prov1(C, X, NRESERVED, NRESERVED + 1) :- vote(C, _, X, "N", NRESERVED), clock(C, _, NRESERVED, _);
commit_prov2(C, X, NRESERVED, NRESERVED + 1) :- vote(C, _, X, "Y", NRESERVED), clock(C, _, NRESERVED, _), notin missing_vote(C, X, NRESERVED);
missing_vote_prov3(C, X, A, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin vote(C, A, X, "Y", NRESERVED);
running_prov4(Coord, Xact, NRESERVED) :- begin(Coord, Xact, NRESERVED), clock(Coord, Coord, NRESERVED, _);
running_prov5(C, X, NRESERVED, NRESERVED + 1) :- running(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED), notin abort(C, X, NRESERVED);
commit_prov6(A, X, NRESERVED, C, MRESERVED) :- commit(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
abort_prov7(A, X, NRESERVED, C, MRESERVED) :- abort(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
vote_prov8(Coord, Agent, Xact, "Y", NRESERVED, MRESERVED) :- prepare(Agent, Coord, Xact, NRESERVED), can(Agent, Xact, NRESERVED), clock(Agent, Coord, NRESERVED, MRESERVED);
prepared_prov9(A, C, X, "Y", NRESERVED) :- prepare(A, C, X, NRESERVED), can(A, X, NRESERVED), clock(A, A, NRESERVED, _);
agent_prov10(C, A, NRESERVED, NRESERVED + 1) :- agent(C, A, NRESERVED), clock(C, _, NRESERVED, _);
can_prov11(A, X, NRESERVED, NRESERVED + 1) :- can(A, X, NRESERVED), clock(A, _, NRESERVED, _);
abort_prov12(C, X, NRESERVED, NRESERVED + 1) :- abort(C, X, NRESERVED), clock(C, _, NRESERVED, _);
commit_prov13(C, X, NRESERVED, NRESERVED + 1) :- commit(C, X, NRESERVED), clock(C, _, NRESERVED, _);
vote_prov14(C, A, X, S, NRESERVED, NRESERVED + 1) :- vote(C, A, X, S, NRESERVED), clock(C, _, NRESERVED, _);
prepared_prov15(C, A, X, Y, NRESERVED, NRESERVED + 1) :- prepared(C, A, X, Y, NRESERVED), clock(C, _, NRESERVED, _);
pre_prov16("termination", X, NRESERVED) :- prepared(_, _, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post_prov17("termination", X, A2, A1, NRESERVED) :- decision(A1, X, _, NRESERVED), decision(A2, X, _, NRESERVED), A1 != A2, clock(A1, A1, NRESERVED, _);
decision_prov18(C, X, "c", NRESERVED) :- commit(C, X, NRESERVED), clock(C, C, NRESERVED, _);
decision_prov19(C, X, "a", NRESERVED) :- abort(C, X, NRESERVED), clock(C, C, NRESERVED, _);
disagree_prov20(X, V1, V2, NRESERVED) :- decision(_, X, V1, NRESERVED), decision(_, X, V2, NRESERVED), V1 != V2, clock(_, _, NRESERVED, _);
pre_prov21("decide", X, NRESERVED) :- decision(_, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post_prov22("decide", X, NRESERVED) :- decision(_, X, V, NRESERVED), clock(_, _, NRESERVED, _), notin disagree(X, NRESERVED);
clock("a", "a", 1, 2);
clock("b", "b", 1, 2);
clock("c", "c", 1, 2);
clock("a", "a", 1, 2);
clock("a", "b", 1, 2);
clock("a", "c", 1, 2);
clock("b", "a", 1, 2);
clock("b", "b", 1, 2);
clock("b", "c", 1, 2);
clock("c", "a", 1, 2);
clock("c", "b", 1, 2);
clock("c", "c", 1, 2);
clock("a", "a", 2, 3);
clock("b", "b", 2, 3);
clock("c", "c", 2, 3);
clock("a", "a", 2, 3);
clock("a", "b", 2, 3);
clock("a", "c", 2, 3);
clock("b", "a", 2, 3);
clock("b", "b", 2, 3);
clock("b", "c", 2, 3);
clock("c", "a", 2, 3);
clock("c", "b", 2, 3);
clock("c", "c", 2, 3);
clock("a", "a", 3, 4);
clock("b", "b", 3, 4);
clock("c", "c", 3, 4);
clock("a", "a", 3, 4);
clock("a", "b", 3, 4);
clock("a", "c", 3, 4);
clock("b", "a", 3, 4);
clock("b", "b", 3, 4);
clock("b", "c", 3, 4);
clock("c", "a", 3, 4);
clock("c", "b", 3, 4);
clock("c", "c", 3, 4);
clock("a", "a", 4, 5);
clock("b", "b", 4, 5);
clock("c", "c", 4, 5);
clock("a", "a", 4, 5);
clock("a", "b", 4, 5);
clock("a", "c", 4, 5);
clock("b", "a", 4, 5);
clock("b", "b", 4, 5);
clock("b", "c", 4, 5);
clock("c", "a", 4, 5);
clock("c", "b", 4, 5);
clock("c", "c", 4, 5);
