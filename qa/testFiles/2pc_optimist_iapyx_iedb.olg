define(good,{string,string,int});
define(post,{string,string,int});
define(pre,{string,string,int});
define(decision,{string,string,string,int});
define(disagree,{string,int});
define(prepare,{string,string,string,int});
define(abort,{string,string,int});
define(commit,{string,string,int});
define(missing_vote,{string,string,int});
define(running,{string,string,int});
define(vote,{string,string,string,string,int});
define(prepared,{string,string,string,string,int});
define(agent,{string,string,int});
define(can,{string,string,int});
define(good_prov0,{string,string,int});
define(good_prov1,{string,string,string,int});
define(post_prov2,{string,string,string,int});
define(pre_prov3,{string,string,int});
define(post_prov4,{string,string,string,string,int});
define(decision_prov5,{string,string,string,int});
define(decision_prov6,{string,string,string,int});
define(disagree_prov7,{string,string,string,int});
define(pre_prov8,{string,string,int});
define(post_prov9,{string,string,string,int});
define(prepare_prov10,{string,string,string,int,int});
define(abort_prov11,{string,string,int,int});
define(commit_prov12,{string,string,int,int});
define(missing_vote_prov13,{string,string,string,int});
define(running_prov14,{string,string,int});
define(running_prov15,{string,string,int,int});
define(commit_prov16,{string,string,string,int,int});
define(abort_prov17,{string,string,string,int,int});
define(vote_prov18,{string,string,string,string,int,int});
define(prepared_prov19,{string,string,string,string,int});
define(agent_prov20,{string,string,int,int});
define(can_prov21,{string,string,int,int});
define(abort_prov22,{string,string,int,int});
define(commit_prov23,{string,string,int,int});
define(vote_prov24,{string,string,string,string,int,int});
define(prepared_prov25,{string,string,string,string,int,int});
define(agent_prov26,{string,string,int});
define(can_prov27,{string,string,int});
define(begin,{string,string,int});
define(agent_edb,{string,string,int});
define(can_edb,{string,string,int});
define(clock,{string,string,int,int});
define(crash,{string,string,int,int});
begin("C","hello",1);
agent_edb("C","a",1);
agent_edb("C","b",1);
agent_edb("C","d",1);
agent_edb("a","b",1);
agent_edb("a","d",1);
agent_edb("b","a",1);
agent_edb("b","d",1);
agent_edb("d","a",1);
agent_edb("d","b",1);
can_edb("a","hello",1);
can_edb("b","hello",1);
can_edb("d","hello",1);
good(A,X,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), clock(A,A,NRESERVED,_) ;
good(B,X,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), agent(A,B,NRESERVED), clock(A,A,NRESERVED,_) ;
post("termination",X,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), clock(A,A,NRESERVED,_) ;
pre("termination",X,NRESERVED) :-  prepared(_,_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post("termination",X,NRESERVED) :-  decision(A1,X,_,NRESERVED), decision(A2,X,_,NRESERVED), clock(A1,A1,NRESERVED,_),A1!=A2 ;
decision(C,X,"c",NRESERVED) :-  commit(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
decision(C,X,"a",NRESERVED) :-  abort(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
disagree(X,NRESERVED) :-  decision(_,X,V1,NRESERVED), decision(_,X,V2,NRESERVED), clock(_,_,NRESERVED,_),V1!=V2 ;
pre("decide",X,NRESERVED) :-  decision(_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post("decide",X,NRESERVED) :-  decision(_,X,V,NRESERVED), clock(_,_,NRESERVED,_),notin disagree(X,NRESERVED) ;
prepare(Agent,Coord,Xact,MRESERVED) :-  running(Coord,Xact,NRESERVED), agent(Coord,Agent,NRESERVED), clock(Coord,Agent,NRESERVED,MRESERVED) ;
abort(C,X,MRESERVED) :-  vote(C,_,X,"N",NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit(C,X,MRESERVED) :-  vote(C,_,X,"Y",NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin missing_vote(C,X,NRESERVED) ;
missing_vote(C,X,NRESERVED) :-  agent(C,A,NRESERVED), running(C,X,NRESERVED), clock(C,C,NRESERVED,_),notin vote(C,A,X,"Y",NRESERVED) ;
running(Coord,Xact,NRESERVED) :-  begin(Coord,Xact,NRESERVED), clock(Coord,Coord,NRESERVED,_) ;
running(C,X,MRESERVED) :-  running(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin commit(C,X,NRESERVED),notin abort(C,X,NRESERVED) ;
commit(A,X,MRESERVED) :-  commit(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
abort(A,X,MRESERVED) :-  abort(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
vote(Coord,Agent,Xact,"Y",MRESERVED) :-  prepare(Agent,Coord,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Coord,NRESERVED,MRESERVED) ;
prepared(A,C,X,"Y",NRESERVED) :-  prepare(A,C,X,NRESERVED), can(A,X,NRESERVED), clock(A,A,NRESERVED,_) ;
agent(C,A,MRESERVED) :-  agent(C,A,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
can(A,X,MRESERVED) :-  can(A,X,NRESERVED), clock(A,_,NRESERVED,MRESERVED) ;
abort(C,X,MRESERVED) :-  abort(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit(C,X,MRESERVED) :-  commit(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
vote(C,A,X,S,MRESERVED) :-  vote(C,A,X,S,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepared(C,A,X,Y,MRESERVED) :-  prepared(C,A,X,Y,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
agent(A0,A1,A2) :-  agent_edb(A0,A1,A2) ;
can(A0,A1,A2) :-  can_edb(A0,A1,A2) ;
good_prov0(A,X,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), clock(A,A,NRESERVED,_) ;
good_prov1(B,X,A,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), agent(A,B,NRESERVED), clock(A,A,NRESERVED,_) ;
post_prov2("termination",X,A,NRESERVED) :-  begin(A,X,1), crash(A,A,_,NRESERVED), clock(A,A,NRESERVED,_) ;
pre_prov3("termination",X,NRESERVED) :-  prepared(_,_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post_prov4("termination",X,A1,A2,NRESERVED) :-  decision(A1,X,_,NRESERVED), decision(A2,X,_,NRESERVED), clock(A1,A1,NRESERVED,_),A1!=A2 ;
decision_prov5(C,X,"c",NRESERVED) :-  commit(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
decision_prov6(C,X,"a",NRESERVED) :-  abort(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
disagree_prov7(X,V1,V2,NRESERVED) :-  decision(_,X,V1,NRESERVED), decision(_,X,V2,NRESERVED), clock(_,_,NRESERVED,_),V1!=V2 ;
pre_prov8("decide",X,NRESERVED) :-  decision(_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post_prov9("decide",X,V,NRESERVED) :-  decision(_,X,V,NRESERVED), clock(_,_,NRESERVED,_),notin disagree(X,NRESERVED) ;
prepare_prov10(Agent,Coord,Xact,NRESERVED,MRESERVED) :-  running(Coord,Xact,NRESERVED), agent(Coord,Agent,NRESERVED), clock(Coord,Agent,NRESERVED,MRESERVED) ;
abort_prov11(C,X,NRESERVED,MRESERVED) :-  vote(C,_,X,"N",NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit_prov12(C,X,NRESERVED,MRESERVED) :-  vote(C,_,X,"Y",NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin missing_vote(C,X,NRESERVED) ;
missing_vote_prov13(C,X,A,NRESERVED) :-  agent(C,A,NRESERVED), running(C,X,NRESERVED), clock(C,C,NRESERVED,_),notin vote(C,A,X,"Y",NRESERVED) ;
running_prov14(Coord,Xact,NRESERVED) :-  begin(Coord,Xact,NRESERVED), clock(Coord,Coord,NRESERVED,_) ;
running_prov15(C,X,NRESERVED,MRESERVED) :-  running(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin commit(C,X,NRESERVED),notin abort(C,X,NRESERVED) ;
commit_prov16(A,X,C,NRESERVED,MRESERVED) :-  commit(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
abort_prov17(A,X,C,NRESERVED,MRESERVED) :-  abort(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
vote_prov18(Coord,Agent,Xact,"Y",NRESERVED,MRESERVED) :-  prepare(Agent,Coord,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Coord,NRESERVED,MRESERVED) ;
prepared_prov19(A,C,X,"Y",NRESERVED) :-  prepare(A,C,X,NRESERVED), can(A,X,NRESERVED), clock(A,A,NRESERVED,_) ;
agent_prov20(C,A,NRESERVED,MRESERVED) :-  agent(C,A,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
can_prov21(A,X,NRESERVED,MRESERVED) :-  can(A,X,NRESERVED), clock(A,_,NRESERVED,MRESERVED) ;
abort_prov22(C,X,NRESERVED,MRESERVED) :-  abort(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit_prov23(C,X,NRESERVED,MRESERVED) :-  commit(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
vote_prov24(C,A,X,S,NRESERVED,MRESERVED) :-  vote(C,A,X,S,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepared_prov25(C,A,X,Y,NRESERVED,MRESERVED) :-  prepared(C,A,X,Y,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
agent_prov26(A0,A1,A2) :-  agent_edb(A0,A1,A2) ;
can_prov27(A0,A1,A2) :-  can_edb(A0,A1,A2) ;
crash("NULL","NULL",99999999,99999999);
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
