define(not_log,{string,string,int});
define(missing_log,{string,string,int});
define(pre,{string,string,int});
define(post,{string,string,int});
define(node,{string,string,int});
define(log,{string,string,int});
define(ack,{string,string,string,int});
define(rbcast,{string,string,string,int});
define(not_missing_log,{string,string,int});
define(not_ack,{string,string,string,int});
define(missing_log_prov0,{string,string,int,string});
define(pre_prov1,{string,string,int});
define(post_prov2,{string,string,int});
define(node_prov3,{string,string,int,int});
define(log_prov4,{string,string,int,int});
define(ack_prov5,{string,string,string,int,int});
define(rbcast_prov6,{string,string,string,int,int});
define(ack_prov7,{string,string,string,int,int});
define(rbcast_prov8,{string,string,string,int});
define(log_prov9,{string,string,int});
define(not_missing_log_prov10,{string,string,int,string});
define(not_missing_log_prov11,{string,string,int,string});
define(not_missing_log_prov12,{string,string,int,string});
define(not_missing_log_prov13,{string,string,int,string});
define(not_missing_log_prov14,{string,string,int,string});
define(not_missing_log_prov15,{string,string,int,string});
define(not_missing_log_prov16,{string,string,int,string});
define(not_ack_prov17,{string,string,string,int,int});
define(not_ack_prov18,{string,string,string,int,int});
define(not_ack_prov19,{string,string,string,int,int});
define(not_log_prov20,{string,string,int,int});
define(not_log_prov21,{string,string,int,int});
define(not_log_prov22,{string,string,int,int});
define(bcast,{string,string,int});
define(dom_int,{int});
define(dom_str,{string});
define(dom_not_missing_log_0,{string});
define(dom_not_missing_log_1,{string});
define(dom_not_missing_log_2,{int});
define(dom_not_ack_0,{string});
define(dom_not_ack_1,{string});
define(dom_not_ack_2,{string});
define(dom_not_ack_3,{int});
define(dom_not_log_0,{string});
define(dom_not_log_1,{string});
define(dom_not_log_2,{int});
define(clock,{string,string,int,int});
define(crash,{string,string,int,int});
not_log(Node,Pload,MRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),clock(Node,_,NRESERVED,MRESERVED),notin log(Node,Pload,NRESERVED);
not_log(Node,Pload,MRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),log(Node,Pload,NRESERVED),notin clock(Node,_,NRESERVED,MRESERVED);
not_log(Node,Pload,MRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),notin clock(Node,_,NRESERVED,MRESERVED),notin log(Node,Pload,NRESERVED);
missing_log(A,Pl,NRESERVED):-log(X,Pl,NRESERVED),node(X,A,NRESERVED),not_log(A,Pl,NRESERVED);
pre(X,Pl,NRESERVED):-log(X,Pl,NRESERVED),notin bcast(X,Pl,1);
post(X,Pl,NRESERVED):-log(X,Pl,NRESERVED),not_missing_log(_,Pl,NRESERVED);
node(Node,Neighbor,MRESERVED):-node(Node,Neighbor,NRESERVED),clock(Node,_,NRESERVED,MRESERVED);
log(Node,Pload,MRESERVED):-log(Node,Pload,NRESERVED),clock(Node,_,NRESERVED,MRESERVED);
ack(S,H,P,MRESERVED):-ack(S,H,P,NRESERVED),clock(S,_,NRESERVED,MRESERVED);
rbcast(Node2,Node1,Pload,MRESERVED):-log(Node1,Pload,NRESERVED),node(Node1,Node2,NRESERVED),not_ack(Node1,Node2,Pload,NRESERVED),clock(Node1,Node2,NRESERVED,MRESERVED);
ack(From,Host,Pl,MRESERVED):-rbcast(Host,From,Pl,NRESERVED),clock(Host,From,NRESERVED,MRESERVED);
rbcast(A,A,P,NRESERVED):-bcast(A,P,NRESERVED);
log(N,P,NRESERVED):-rbcast(N,_,P,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),node(X,A,NRESERVED),not_log(A,Pl,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),not_log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),not_log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),node(X,A,NRESERVED),log(A,Pl,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),node(X,A,NRESERVED),log(A,Pl,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log(A,Pl,NRESERVED):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_ack(S,H,P,MRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),clock(S,_,NRESERVED,MRESERVED),notin ack(S,H,P,NRESERVED);
not_ack(S,H,P,MRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),ack(S,H,P,NRESERVED),notin clock(S,_,NRESERVED,MRESERVED);
not_ack(S,H,P,MRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),notin clock(S,_,NRESERVED,MRESERVED),notin ack(S,H,P,NRESERVED);
missing_log_prov0(A,Pl,NRESERVED,X):-log(X,Pl,NRESERVED),node(X,A,NRESERVED),not_log(A,Pl,NRESERVED);
pre_prov1(X,Pl,NRESERVED):-log(X,Pl,NRESERVED),notin bcast(X,Pl,1);
post_prov2(X,Pl,NRESERVED):-log(X,Pl,NRESERVED),not_missing_log(_,Pl,NRESERVED);
node_prov3(Node,Neighbor,MRESERVED,NRESERVED):-node(Node,Neighbor,NRESERVED),clock(Node,_,NRESERVED,MRESERVED);
log_prov4(Node,Pload,MRESERVED,NRESERVED):-log(Node,Pload,NRESERVED),clock(Node,_,NRESERVED,MRESERVED);
ack_prov5(S,H,P,MRESERVED,NRESERVED):-ack(S,H,P,NRESERVED),clock(S,_,NRESERVED,MRESERVED);
rbcast_prov6(Node2,Node1,Pload,MRESERVED,NRESERVED):-log(Node1,Pload,NRESERVED),node(Node1,Node2,NRESERVED),not_ack(Node1,Node2,Pload,NRESERVED),clock(Node1,Node2,NRESERVED,MRESERVED);
ack_prov7(From,Host,Pl,MRESERVED,NRESERVED):-rbcast(Host,From,Pl,NRESERVED),clock(Host,From,NRESERVED,MRESERVED);
rbcast_prov8(A,A,P,NRESERVED):-bcast(A,P,NRESERVED);
log_prov9(N,P,NRESERVED):-rbcast(N,_,P,NRESERVED);
not_missing_log_prov10(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),node(X,A,NRESERVED),not_log(A,Pl,NRESERVED);
not_missing_log_prov11(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),not_log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log_prov12(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),not_log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log_prov13(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),node(X,A,NRESERVED),log(A,Pl,NRESERVED);
not_missing_log_prov14(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),node(X,A,NRESERVED),log(A,Pl,NRESERVED);
not_missing_log_prov15(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),log(X,Pl,NRESERVED),log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_missing_log_prov16(A,Pl,NRESERVED,X):-dom_str(A),dom_str(X),dom_int(NRESERVED),dom_str(Pl),dom_not_missing_log_0(A),dom_not_missing_log_1(Pl),dom_not_missing_log_2(NRESERVED),not_log(X,Pl,NRESERVED),log(A,Pl,NRESERVED),notin node(X,A,NRESERVED);
not_ack_prov17(S,H,P,MRESERVED,NRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),clock(S,_,NRESERVED,MRESERVED),notin ack(S,H,P,NRESERVED);
not_ack_prov18(S,H,P,MRESERVED,NRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),ack(S,H,P,NRESERVED),notin clock(S,_,NRESERVED,MRESERVED);
not_ack_prov19(S,H,P,MRESERVED,NRESERVED):-dom_str(H),dom_int(MRESERVED),dom_str(P),dom_str(S),dom_int(NRESERVED),dom_not_ack_0(S),dom_not_ack_1(H),dom_not_ack_2(P),dom_not_ack_3(MRESERVED),notin clock(S,_,NRESERVED,MRESERVED),notin ack(S,H,P,NRESERVED);
not_log_prov20(Node,Pload,MRESERVED,NRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),clock(Node,_,NRESERVED,MRESERVED),notin log(Node,Pload,NRESERVED);
not_log_prov21(Node,Pload,MRESERVED,NRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),log(Node,Pload,NRESERVED),notin clock(Node,_,NRESERVED,MRESERVED);
not_log_prov22(Node,Pload,MRESERVED,NRESERVED):-dom_str(Node),dom_str(Pload),dom_int(NRESERVED),dom_int(MRESERVED),dom_not_log_0(Node),dom_not_log_1(Pload),dom_not_log_2(MRESERVED),notin clock(Node,_,NRESERVED,MRESERVED),notin log(Node,Pload,NRESERVED);
node("a","b",1);
node("a","c",1);
node("b","a",1);
node("b","c",1);
node("c","a",1);
node("c","b",1);
bcast("a","hello",1);
dom_int(99999999);
dom_int(1);
dom_int(3);
dom_int(2);
dom_int(5);
dom_int(4);
dom_int(7);
dom_int(6);
dom_str("a");
dom_str("c");
dom_str("b");
dom_str("NULL");
dom_str("hello");
dom_not_missing_log_0("a");
dom_not_missing_log_0("NULL");
dom_not_missing_log_0("hello");
dom_not_missing_log_1("hello");
dom_not_missing_log_2(7);
dom_not_missing_log_2(3);
dom_not_missing_log_2(5);
dom_not_missing_log_2(4);
dom_not_missing_log_2(2);
dom_not_missing_log_2(6);
dom_not_ack_0("a");
dom_not_ack_0("c");
dom_not_ack_0("b");
dom_not_ack_1("c");
dom_not_ack_1("a");
dom_not_ack_1("b");
dom_not_ack_2("hello");
dom_not_ack_3(99999999);
dom_not_ack_3(1);
dom_not_log_0("NULL");
dom_not_log_0("hello");
dom_not_log_1("hello");
dom_not_log_2(1);
dom_not_log_0("c");
dom_not_log_0("b");
dom_not_log_1("hello");
dom_not_log_2(1);
crash("NULL","NULL",99999999,99999999);
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
clock("a","a",5,6);
clock("a","b",5,6);
clock("a","c",5,6);
clock("b","a",5,6);
clock("b","b",5,6);
clock("b","c",5,6);
clock("c","a",5,6);
clock("c","b",5,6);
clock("c","c",5,6);
clock("a","a",6,7);
clock("a","b",6,7);
clock("a","c",6,7);
clock("b","a",6,7);
clock("b","b",6,7);
clock("b","c",6,7);
clock("c","a",6,7);
clock("c","b",6,7);
clock("c","c",6,7);
