define(pre,{string,string,int});
define(post,{string,string,int});
define(decision,{string,string,string,int});
define(disagree,{string,int});
define(timer_svc,{string,string,int,int});
define(known,{string,string,string,int});
define(decision_req,{string,string,string,int});
define(commit,{string,string,int});
define(abort,{string,string,int});
define(gotta_abort,{string,string,string,int});
define(timer_state,{string,string,int,int});
define(timeout,{string,string,int});
define(prepare,{string,string,string,int});
define(missing_vote,{string,string,int});
define(running,{string,string,int});
define(vote,{string,string,string,string,int});
define(prepared,{string,string,string,string,int});
define(agent,{string,string,int});
define(can,{string,string,int});
define(pre_prov0,{string,string,int});
define(post_prov1,{string,string,string,string,int});
define(decision_prov2,{string,string,string,int});
define(decision_prov3,{string,string,string,int});
define(disagree_prov4,{string,string,string,int});
define(pre_prov5,{string,string,int});
define(post_prov6,{string,string,string,int});
define(timer_svc_prov7,{string,string,int,int});
define(known_prov8,{string,string,string,int});
define(known_prov9,{string,string,string,int});
define(decision_req_prov10,{string,string,string,int,int});
define(commit_prov11,{string,string,string,int,int});
define(abort_prov12,{string,string,string,int,int});
define(gotta_abort_prov13,{string,string,string,int});
define(abort_prov14,{string,string,int});
define(abort_prov15,{string,string,string,int,int});
define(timer_state_prov16,{string,string,int,int,int,int});
define(timer_state_prov17,{string,string,int,int,int,int});
define(timeout_prov18,{string,string,int});
define(timer_svc_prov19,{string,string,int,int});
define(abort_prov20,{string,string,int,int});
define(prepare_prov21,{string,string,string,int,int});
define(abort_prov22,{string,string,int,int});
define(commit_prov23,{string,string,int,int});
define(missing_vote_prov24,{string,string,string,int});
define(running_prov25,{string,string,int});
define(running_prov26,{string,string,int,int});
define(commit_prov27,{string,string,string,int,int});
define(abort_prov28,{string,string,string,int,int});
define(vote_prov29,{string,string,string,string,int,int});
define(prepared_prov30,{string,string,string,string,int});
define(agent_prov31,{string,string,int,int});
define(can_prov32,{string,string,int,int});
define(abort_prov33,{string,string,int,int});
define(commit_prov34,{string,string,int,int});
define(vote_prov35,{string,string,string,string,int,int});
define(prepared_prov36,{string,string,string,string,int,int});
define(begin,{string,string,int});
define(clock,{string,string,int,int});
define(crash,{string,string,int,int});
agent("a","C",1);
agent("b","C",1);
agent("d","C",1);
begin("C","hello",1);
agent("C","a",1);
agent("C","b",1);
agent("C","d",1);
agent("a","b",1);
agent("a","d",1);
agent("b","a",1);
agent("b","d",1);
agent("d","a",1);
agent("d","b",1);
can("a","hello",1);
can("b","hello",1);
can("d","hello",1);
pre("termination",X,NRESERVED) :-  prepared(_,_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post("termination",X,NRESERVED) :-  decision(A1,X,_,NRESERVED), decision(A2,X,_,NRESERVED), clock(A1,A1,NRESERVED,_),A1!=A2 ;
decision(C,X,"c",NRESERVED) :-  commit(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
decision(C,X,"a",NRESERVED) :-  abort(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
disagree(X,NRESERVED) :-  decision(_,X,V1,NRESERVED), decision(_,X,V2,NRESERVED), clock(_,_,NRESERVED,_),V1!=V2 ;
pre("decide",X,NRESERVED) :-  decision(_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post("decide",X,NRESERVED) :-  decision(_,X,V,NRESERVED), clock(_,_,NRESERVED,_),notin disagree(X,NRESERVED) ;
timer_svc(Agent,Xact,4,NRESERVED) :-  prepare(Agent,_,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
known(Agent,Xact,"C",NRESERVED) :-  commit(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
known(Agent,Xact,"A",NRESERVED) :-  abort(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
decision_req(Other,Agent,Xact,MRESERVED) :-  timeout(Agent,Xact,NRESERVED), agent(Agent,Other,NRESERVED), clock(Agent,Other,NRESERVED,MRESERVED),notin known(Agent,Xact,_,NRESERVED) ;
commit(Requestor,Xact,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), commit(Agent,Xact,NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
abort(Requestor,Xact,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), abort(Agent,Xact,NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
gotta_abort(Agent,Requestor,Xact,NRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_),notin prepared(Agent,_,Xact,_,NRESERVED) ;
abort(Agent,Xact,NRESERVED) :-  gotta_abort(Agent,_,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
abort(Requestor,Xact,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), prepared(Agent,_,Xact,"N",NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
timer_state(H,I,T-1,MRESERVED) :-  timer_svc(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
timer_state(H,I,T-1,MRESERVED) :-  timer_state(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin timer_cancel(H,I,NRESERVED),T>1 ;
timeout(H,I,NRESERVED) :-  timer_state(H,I,1,NRESERVED), clock(H,H,NRESERVED,_) ;
timer_svc(C,X,4,NRESERVED) :-  begin(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
abort(C,X,MRESERVED) :-  timeout(C,X,NRESERVED), missing_vote(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepare(Agent,Coord,Xact,MRESERVED) :-  running(Coord,Xact,NRESERVED), agent(Coord,Agent,NRESERVED), clock(Coord,Agent,NRESERVED,MRESERVED) ;
abort(C,X,MRESERVED) :-  vote(C,_,X,"N",NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit(C,X,MRESERVED) :-  vote(C,_,X,"Y",NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin missing_vote(C,X,NRESERVED) ;
missing_vote(C,X,NRESERVED) :-  agent(C,A,NRESERVED), running(C,X,NRESERVED), clock(C,C,NRESERVED,_),notin vote(C,A,X,"Y",NRESERVED) ;
running(Coord,Xact,NRESERVED) :-  begin(Coord,Xact,NRESERVED), clock(Coord,Coord,NRESERVED,_) ;
running(C,X,MRESERVED) :-  running(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin commit(C,X,NRESERVED),notin abort(C,X,NRESERVED) ;
commit(A,X,MRESERVED) :-  commit(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
abort(A,X,MRESERVED) :-  abort(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
vote(Coord,Agent,Xact,"Y",MRESERVED) :-  prepare(Agent,Coord,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Coord,NRESERVED,MRESERVED) ;
prepared(A,C,X,"Y",NRESERVED) :-  prepare(A,C,X,NRESERVED), can(A,X,NRESERVED), clock(A,A,NRESERVED,_) ;
agent(C,A,MRESERVED) :-  agent(C,A,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
can(A,X,MRESERVED) :-  can(A,X,NRESERVED), clock(A,_,NRESERVED,MRESERVED) ;
abort(C,X,MRESERVED) :-  abort(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit(C,X,MRESERVED) :-  commit(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
vote(C,A,X,S,MRESERVED) :-  vote(C,A,X,S,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepared(C,A,X,Y,MRESERVED) :-  prepared(C,A,X,Y,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
pre_prov0("termination",X,NRESERVED) :-  prepared(_,_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post_prov1("termination",X,A1,A2,NRESERVED) :-  decision(A1,X,_,NRESERVED), decision(A2,X,_,NRESERVED), clock(A1,A1,NRESERVED,_),A1!=A2 ;
decision_prov2(C,X,"c",NRESERVED) :-  commit(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
decision_prov3(C,X,"a",NRESERVED) :-  abort(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
disagree_prov4(X,V1,V2,NRESERVED) :-  decision(_,X,V1,NRESERVED), decision(_,X,V2,NRESERVED), clock(_,_,NRESERVED,_),V1!=V2 ;
pre_prov5("decide",X,NRESERVED) :-  decision(_,X,_,NRESERVED), clock(_,_,NRESERVED,_) ;
post_prov6("decide",X,V,NRESERVED) :-  decision(_,X,V,NRESERVED), clock(_,_,NRESERVED,_),notin disagree(X,NRESERVED) ;
timer_svc_prov7(Agent,Xact,4,NRESERVED) :-  prepare(Agent,_,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
known_prov8(Agent,Xact,"C",NRESERVED) :-  commit(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
known_prov9(Agent,Xact,"A",NRESERVED) :-  abort(Agent,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
decision_req_prov10(Other,Agent,Xact,NRESERVED,MRESERVED) :-  timeout(Agent,Xact,NRESERVED), agent(Agent,Other,NRESERVED), clock(Agent,Other,NRESERVED,MRESERVED),notin known(Agent,Xact,_,NRESERVED) ;
commit_prov11(Requestor,Xact,Agent,NRESERVED,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), commit(Agent,Xact,NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
abort_prov12(Requestor,Xact,Agent,NRESERVED,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), abort(Agent,Xact,NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
gotta_abort_prov13(Agent,Requestor,Xact,NRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_),notin prepared(Agent,_,Xact,_,NRESERVED) ;
abort_prov14(Agent,Xact,NRESERVED) :-  gotta_abort(Agent,_,Xact,NRESERVED), clock(Agent,Agent,NRESERVED,_) ;
abort_prov15(Requestor,Xact,Agent,NRESERVED,MRESERVED) :-  decision_req(Agent,Requestor,Xact,NRESERVED), prepared(Agent,_,Xact,"N",NRESERVED), clock(Agent,Requestor,NRESERVED,MRESERVED) ;
timer_state_prov16(H,I,T-1,T,NRESERVED,MRESERVED) :-  timer_svc(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED) ;
timer_state_prov17(H,I,T-1,T,NRESERVED,MRESERVED) :-  timer_state(H,I,T,NRESERVED), clock(H,_,NRESERVED,MRESERVED),notin timer_cancel(H,I,NRESERVED),T>1 ;
timeout_prov18(H,I,NRESERVED) :-  timer_state(H,I,1,NRESERVED), clock(H,H,NRESERVED,_) ;
timer_svc_prov19(C,X,4,NRESERVED) :-  begin(C,X,NRESERVED), clock(C,C,NRESERVED,_) ;
abort_prov20(C,X,NRESERVED,MRESERVED) :-  timeout(C,X,NRESERVED), missing_vote(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepare_prov21(Agent,Coord,Xact,NRESERVED,MRESERVED) :-  running(Coord,Xact,NRESERVED), agent(Coord,Agent,NRESERVED), clock(Coord,Agent,NRESERVED,MRESERVED) ;
abort_prov22(C,X,NRESERVED,MRESERVED) :-  vote(C,_,X,"N",NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit_prov23(C,X,NRESERVED,MRESERVED) :-  vote(C,_,X,"Y",NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin missing_vote(C,X,NRESERVED) ;
missing_vote_prov24(C,X,A,NRESERVED) :-  agent(C,A,NRESERVED), running(C,X,NRESERVED), clock(C,C,NRESERVED,_),notin vote(C,A,X,"Y",NRESERVED) ;
running_prov25(Coord,Xact,NRESERVED) :-  begin(Coord,Xact,NRESERVED), clock(Coord,Coord,NRESERVED,_) ;
running_prov26(C,X,NRESERVED,MRESERVED) :-  running(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED),notin commit(C,X,NRESERVED),notin abort(C,X,NRESERVED) ;
commit_prov27(A,X,C,NRESERVED,MRESERVED) :-  commit(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
abort_prov28(A,X,C,NRESERVED,MRESERVED) :-  abort(C,X,NRESERVED), agent(C,A,NRESERVED), clock(C,A,NRESERVED,MRESERVED) ;
vote_prov29(Coord,Agent,Xact,"Y",NRESERVED,MRESERVED) :-  prepare(Agent,Coord,Xact,NRESERVED), can(Agent,Xact,NRESERVED), clock(Agent,Coord,NRESERVED,MRESERVED) ;
prepared_prov30(A,C,X,"Y",NRESERVED) :-  prepare(A,C,X,NRESERVED), can(A,X,NRESERVED), clock(A,A,NRESERVED,_) ;
agent_prov31(C,A,NRESERVED,MRESERVED) :-  agent(C,A,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
can_prov32(A,X,NRESERVED,MRESERVED) :-  can(A,X,NRESERVED), clock(A,_,NRESERVED,MRESERVED) ;
abort_prov33(C,X,NRESERVED,MRESERVED) :-  abort(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
commit_prov34(C,X,NRESERVED,MRESERVED) :-  commit(C,X,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
vote_prov35(C,A,X,S,NRESERVED,MRESERVED) :-  vote(C,A,X,S,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
prepared_prov36(C,A,X,Y,NRESERVED,MRESERVED) :-  prepared(C,A,X,Y,NRESERVED), clock(C,_,NRESERVED,MRESERVED) ;
crash("NULL","NULL",99999999,99999999);
clock("a","a",1,2);
clock("a","b",1,2);
clock("a","c",1,2);
clock("b","a",1,2);
clock("b","b",1,2);
clock("b","c",1,2);
clock("c","a",1,2);
clock("c","b",1,2);
clock("c","c",1,2);
clock("a","a",2,3);
clock("a","b",2,3);
clock("a","c",2,3);
clock("b","a",2,3);
clock("b","b",2,3);
clock("b","c",2,3);
clock("c","a",2,3);
clock("c","b",2,3);
clock("c","c",2,3);
clock("a","a",3,4);
clock("a","b",3,4);
clock("a","c",3,4);
clock("b","a",3,4);
clock("b","b",3,4);
clock("b","c",3,4);
clock("c","a",3,4);
clock("c","b",3,4);
clock("c","c",3,4);
clock("a","a",4,5);
clock("a","b",4,5);
clock("a","c",4,5);
clock("b","a",4,5);
clock("b","b",4,5);
clock("b","c",4,5);
clock("c","a",4,5);
clock("c","b",4,5);
clock("c","c",4,5);
