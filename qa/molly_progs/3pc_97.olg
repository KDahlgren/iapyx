define(precommitted, {string, string, string, int});
define(cancommit, {string, string, string, int});
define(pre_prov37, {string, string, int});
define(timer_cancel, {string, string, int});
define(vote, {string, string, string, string, int});
define(commit_prov27, {string, string, int, int});
define(precommit_prov6, {string, string, string, int, int});
define(abort_prov4, {string, string, int, int});
define(disagree, {string, int});
define(timer_svc, {string, string, int, int});
define(missing_ack_prov15, {string, string, string, int});
define(gotcommit_prov23, {string, string, string, int, int});
define(precommitted_prov11, {string, string, string, int});
define(timer_state_prov39, {string, string, int, int, int, int});
define(abort_prov26, {string, string, int, int});
define(commit_prov14, {string, string, int, int});
define(running_prov30, {string, string, int, int});
define(authorized_prov5, {string, string, int});
define(post_prov38, {string, string, int});
define(prepared_prov17, {string, string, string, string, int});
define(running_prov29, {string, string, int});
define(post, {string, string, int});
define(commit_prov21, {string, string, int, string, int});
define(timer_svc_prov19, {string, string, int, int});
define(vote_msg, {string, string, string, string, int});
define(decision_prov34, {string, string, string, int});
define(ack_prov7, {string, string, string, int, int});
define(gotcommit, {string, string, string, int});
define(pre_prov32, {string, string, int});
define(commit, {string, string, int});
define(cancommit_prov0, {string, string, string, int, int});
define(missing_vote_prov16, {string, string, string, int});
define(running, {string, string, int});
define(timer_state, {string, string, int, int});
define(abort, {string, string, int});
define(prepared, {string, string, string, string, int});
define(precommitted_prov12, {string, string, string, int, int});
define(precommit, {string, string, string, int});
define(pre, {string, string, int});
define(post_prov33, {string, string, string, string, int});
define(decision_prov35, {string, string, string, int});
define(can, {string, string, int});
define(crash, {string, string, int, int});
define(agent_prov24, {string, string, int, int});
define(timeout_prov41, {string, string, int});
define(abort_prov22, {string, string, int, string, int});
define(disagree_prov36, {string, string, string, int});
define(can_prov25, {string, string, int, int});
define(missing_vote, {string, string, int});
define(coordinator_prov31, {string, string, int, int});
define(prepared_prov18, {string, string, string, string, int, int});
define(clock, {string, string, int, int});
define(timer_cancel_prov8, {string, string, int});
define(abort_prov13, {string, string, int, int});
define(coordinator, {string, string, int});
define(commit_prov10, {string, string, int});
define(timer_state_prov40, {string, string, int, int, int, int});
define(agent, {string, string, int});
define(ack, {string, string, string, int});
define(timeout, {string, string, int});
define(missing_ack, {string, string, int});
define(vote_msg_prov1, {string, string, string, string, int, int});
define(begin, {string, string, int});
define(abort_prov20, {string, string, int, int});
define(vote_prov2, {string, string, string, string, int});
define(vote_prov28, {string, string, string, string, int, int});
define(authorized, {string, string, int});
define(decision, {string, string, string, int});
define(timer_svc_prov9, {string, string, int, string, int});
define(timer_svc_prov3, {string, string, int, int});
agent("C", "a", 1);
agent("C", "b", 1);
agent("C", "d", 1);
agent("a", "b", 1);
agent("a", "d", 1);
agent("b", "a", 1);
agent("b", "d", 1);
agent("d", "a", 1);
agent("d", "b", 1);
coordinator("a", "C", 1);
coordinator("b", "C", 1);
coordinator("d", "C", 1);
coordinator("C", "C", 1);
can("a", "hello", 1);
can("b", "hello", 1);
can("d", "hello", 1);
begin("C", "hello", 1);
cancommit(Agent, Coord, Xact, MRESERVED) :- begin(Coord, Xact, NRESERVED), agent(Coord, Agent, NRESERVED), clock(Coord, Agent, NRESERVED, MRESERVED);
vote_msg(Coord, Agent, Xact, "Y", MRESERVED) :- cancommit(Agent, Coord, Xact, NRESERVED), can(Agent, Xact, NRESERVED), clock(Agent, Coord, NRESERVED, MRESERVED);
vote(C, A, X, S, NRESERVED) :- vote_msg(C, A, X, S, NRESERVED), clock(C, C, NRESERVED, _);
timer_svc(A, X, 4, NRESERVED) :- cancommit(A, _, X, NRESERVED), clock(A, A, NRESERVED, _);
abort(A, X, NRESERVED + 1) :- timeout(A, X, NRESERVED), clock(A, _, NRESERVED, _), notin coordinator(A, A, NRESERVED), notin precommitted(A, _, X, NRESERVED), notin commit(A, X, NRESERVED);
authorized(C, X, NRESERVED) :- vote_msg(C, _, X, "Y", NRESERVED), clock(C, C, NRESERVED, _), notin missing_vote(C, X, NRESERVED), notin abort(C, X, NRESERVED);
precommit(A, C, X, MRESERVED) :- authorized(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
ack(C, A, X, MRESERVED) :- precommit(A, C, X, NRESERVED), prepared(A, C, X, "Y", NRESERVED), clock(A, C, NRESERVED, MRESERVED);
timer_cancel(A, X, NRESERVED) :- precommit(A, _, X, NRESERVED), prepared(A, _, X, "Y", NRESERVED), clock(A, A, NRESERVED, _);
timer_svc(A, X, 4, NRESERVED) :- precommit(A, C, X, NRESERVED), prepared(A, C, X, "Y", NRESERVED), clock(A, A, NRESERVED, _);
commit(A, X, NRESERVED) :- timeout(A, X, NRESERVED), precommitted(A, C, X, NRESERVED), clock(A, A, NRESERVED, _), notin abort(A, X, NRESERVED);
precommitted(A, C, X, NRESERVED) :- precommit(A, C, X, NRESERVED), clock(A, A, NRESERVED, _);
precommitted(A, C, X, NRESERVED + 1) :- precommitted(A, C, X, NRESERVED), clock(A, _, NRESERVED, _);
abort(C, X, NRESERVED + 1) :- vote(C, _, X, "N", NRESERVED), clock(C, _, NRESERVED, _);
commit(C, X, NRESERVED + 1) :- ack(C, _, X, NRESERVED), clock(C, _, NRESERVED, _), notin missing_ack(C, X, NRESERVED), notin abort(C, X, NRESERVED);
missing_ack(C, X, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin ack(C, A, X, NRESERVED);
missing_vote(C, X, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin vote(C, A, X, "Y", NRESERVED);
prepared(A, C, X, "Y", NRESERVED) :- cancommit(A, C, X, NRESERVED), can(A, X, NRESERVED), clock(A, A, NRESERVED, _);
prepared(A, C, X, Y, NRESERVED + 1) :- prepared(A, C, X, Y, NRESERVED), clock(A, _, NRESERVED, _);
timer_svc(C, X, 5, NRESERVED) :- begin(C, X, NRESERVED), clock(C, C, NRESERVED, _);
abort(C, X, NRESERVED + 1) :- timeout(C, X, NRESERVED), coordinator(C, C, NRESERVED), missing_ack(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED);
commit(A, X, MRESERVED) :- commit(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED), notin abort(C, A, NRESERVED);
abort(A, X, MRESERVED) :- abort(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
gotcommit(C, A, X, MRESERVED) :- commit(A, X, NRESERVED), precommitted(A, C, X, NRESERVED), clock(A, C, NRESERVED, MRESERVED);
agent(C, A, NRESERVED + 1) :- agent(C, A, NRESERVED), clock(C, _, NRESERVED, _);
can(A, X, NRESERVED + 1) :- can(A, X, NRESERVED), clock(A, _, NRESERVED, _);
abort(A, X, NRESERVED + 1) :- abort(A, X, NRESERVED), clock(A, _, NRESERVED, _);
commit(A, X, NRESERVED + 1) :- commit(A, X, NRESERVED), clock(A, _, NRESERVED, _), notin abort(A, X, NRESERVED);
vote(C, A, X, S, NRESERVED + 1) :- vote(C, A, X, S, NRESERVED), clock(C, _, NRESERVED, _);
running(Coord, Xact, NRESERVED) :- begin(Coord, Xact, NRESERVED), clock(Coord, Coord, NRESERVED, _);
running(C, X, NRESERVED + 1) :- running(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED), notin abort(C, X, NRESERVED);
coordinator(A, C, NRESERVED + 1) :- coordinator(A, C, NRESERVED), clock(A, _, NRESERVED, _);
pre("termination", X, NRESERVED) :- prepared(_, _, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post("termination", X, NRESERVED) :- decision(A1, X, _, NRESERVED), decision(A2, X, _, NRESERVED), A1 != A2, clock(A1, A1, NRESERVED, _);
decision(C, X, "c", NRESERVED) :- commit(C, X, NRESERVED), clock(C, C, NRESERVED, _);
decision(C, X, "a", NRESERVED) :- abort(C, X, NRESERVED), clock(C, C, NRESERVED, _);
disagree(X, NRESERVED) :- decision(_, X, V1, NRESERVED), decision(_, X, V2, NRESERVED), V1 != V2, clock(_, _, NRESERVED, _);
pre("decide", X, NRESERVED) :- decision(_, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post("decide", X, NRESERVED) :- decision(_, X, V, NRESERVED), clock(_, _, NRESERVED, _), notin disagree(X, NRESERVED);
timer_state(H, I, T - 1, NRESERVED + 1) :- timer_svc(H, I, T, NRESERVED), clock(H, _, NRESERVED, _);
timer_state(H, I, T - 1, NRESERVED + 1) :- timer_state(H, I, T, NRESERVED), T > 1, clock(H, _, NRESERVED, _), notin timer_cancel(H, I, NRESERVED);
timeout(H, I, NRESERVED) :- timer_state(H, I, 1, NRESERVED), clock(H, H, NRESERVED, _);
cancommit_prov0(Agent, Coord, Xact, NRESERVED, MRESERVED) :- begin(Coord, Xact, NRESERVED), agent(Coord, Agent, NRESERVED), clock(Coord, Agent, NRESERVED, MRESERVED);
vote_msg_prov1(Coord, Agent, Xact, "Y", NRESERVED, MRESERVED) :- cancommit(Agent, Coord, Xact, NRESERVED), can(Agent, Xact, NRESERVED), clock(Agent, Coord, NRESERVED, MRESERVED);
vote_prov2(C, A, X, S, NRESERVED) :- vote_msg(C, A, X, S, NRESERVED), clock(C, C, NRESERVED, _);
timer_svc_prov3(A, X, 4, NRESERVED) :- cancommit(A, _, X, NRESERVED), clock(A, A, NRESERVED, _);
abort_prov4(A, X, NRESERVED, NRESERVED + 1) :- timeout(A, X, NRESERVED), clock(A, _, NRESERVED, _), notin coordinator(A, A, NRESERVED), notin precommitted(A, _, X, NRESERVED), notin commit(A, X, NRESERVED);
authorized_prov5(C, X, NRESERVED) :- vote_msg(C, _, X, "Y", NRESERVED), clock(C, C, NRESERVED, _), notin missing_vote(C, X, NRESERVED), notin abort(C, X, NRESERVED);
precommit_prov6(A, C, X, NRESERVED, MRESERVED) :- authorized(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
ack_prov7(C, A, X, NRESERVED, MRESERVED) :- precommit(A, C, X, NRESERVED), prepared(A, C, X, "Y", NRESERVED), clock(A, C, NRESERVED, MRESERVED);
timer_cancel_prov8(A, X, NRESERVED) :- precommit(A, _, X, NRESERVED), prepared(A, _, X, "Y", NRESERVED), clock(A, A, NRESERVED, _);
timer_svc_prov9(A, X, 4, C, NRESERVED) :- precommit(A, C, X, NRESERVED), prepared(A, C, X, "Y", NRESERVED), clock(A, A, NRESERVED, _);
commit_prov10(A, X, NRESERVED) :- timeout(A, X, NRESERVED), precommitted(A, C, X, NRESERVED), clock(A, A, NRESERVED, _), notin abort(A, X, NRESERVED);
precommitted_prov11(A, C, X, NRESERVED) :- precommit(A, C, X, NRESERVED), clock(A, A, NRESERVED, _);
precommitted_prov12(A, C, X, NRESERVED, NRESERVED + 1) :- precommitted(A, C, X, NRESERVED), clock(A, _, NRESERVED, _);
abort_prov13(C, X, NRESERVED, NRESERVED + 1) :- vote(C, _, X, "N", NRESERVED), clock(C, _, NRESERVED, _);
commit_prov14(C, X, NRESERVED, NRESERVED + 1) :- ack(C, _, X, NRESERVED), clock(C, _, NRESERVED, _), notin missing_ack(C, X, NRESERVED), notin abort(C, X, NRESERVED);
missing_ack_prov15(C, X, A, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin ack(C, A, X, NRESERVED);
missing_vote_prov16(C, X, A, NRESERVED) :- agent(C, A, NRESERVED), running(C, X, NRESERVED), clock(C, C, NRESERVED, _), notin vote(C, A, X, "Y", NRESERVED);
prepared_prov17(A, C, X, "Y", NRESERVED) :- cancommit(A, C, X, NRESERVED), can(A, X, NRESERVED), clock(A, A, NRESERVED, _);
prepared_prov18(A, C, X, Y, NRESERVED, NRESERVED + 1) :- prepared(A, C, X, Y, NRESERVED), clock(A, _, NRESERVED, _);
timer_svc_prov19(C, X, 5, NRESERVED) :- begin(C, X, NRESERVED), clock(C, C, NRESERVED, _);
abort_prov20(C, X, NRESERVED, NRESERVED + 1) :- timeout(C, X, NRESERVED), coordinator(C, C, NRESERVED), missing_ack(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED);
commit_prov21(A, X, NRESERVED, C, MRESERVED) :- commit(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED), notin abort(C, A, NRESERVED);
abort_prov22(A, X, NRESERVED, C, MRESERVED) :- abort(C, X, NRESERVED), agent(C, A, NRESERVED), clock(C, A, NRESERVED, MRESERVED);
gotcommit_prov23(C, A, X, NRESERVED, MRESERVED) :- commit(A, X, NRESERVED), precommitted(A, C, X, NRESERVED), clock(A, C, NRESERVED, MRESERVED);
agent_prov24(C, A, NRESERVED, NRESERVED + 1) :- agent(C, A, NRESERVED), clock(C, _, NRESERVED, _);
can_prov25(A, X, NRESERVED, NRESERVED + 1) :- can(A, X, NRESERVED), clock(A, _, NRESERVED, _);
abort_prov26(A, X, NRESERVED, NRESERVED + 1) :- abort(A, X, NRESERVED), clock(A, _, NRESERVED, _);
commit_prov27(A, X, NRESERVED, NRESERVED + 1) :- commit(A, X, NRESERVED), clock(A, _, NRESERVED, _), notin abort(A, X, NRESERVED);
vote_prov28(C, A, X, S, NRESERVED, NRESERVED + 1) :- vote(C, A, X, S, NRESERVED), clock(C, _, NRESERVED, _);
running_prov29(Coord, Xact, NRESERVED) :- begin(Coord, Xact, NRESERVED), clock(Coord, Coord, NRESERVED, _);
running_prov30(C, X, NRESERVED, NRESERVED + 1) :- running(C, X, NRESERVED), clock(C, _, NRESERVED, _), notin commit(C, X, NRESERVED), notin abort(C, X, NRESERVED);
coordinator_prov31(A, C, NRESERVED, NRESERVED + 1) :- coordinator(A, C, NRESERVED), clock(A, _, NRESERVED, _);
pre_prov32("termination", X, NRESERVED) :- prepared(_, _, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post_prov33("termination", X, A2, A1, NRESERVED) :- decision(A1, X, _, NRESERVED), decision(A2, X, _, NRESERVED), A1 != A2, clock(A1, A1, NRESERVED, _);
decision_prov34(C, X, "c", NRESERVED) :- commit(C, X, NRESERVED), clock(C, C, NRESERVED, _);
decision_prov35(C, X, "a", NRESERVED) :- abort(C, X, NRESERVED), clock(C, C, NRESERVED, _);
disagree_prov36(X, V1, V2, NRESERVED) :- decision(_, X, V1, NRESERVED), decision(_, X, V2, NRESERVED), V1 != V2, clock(_, _, NRESERVED, _);
pre_prov37("decide", X, NRESERVED) :- decision(_, X, _, NRESERVED), clock(_, _, NRESERVED, _);
post_prov38("decide", X, NRESERVED) :- decision(_, X, V, NRESERVED), clock(_, _, NRESERVED, _), notin disagree(X, NRESERVED);
timer_state_prov39(H, I, T - 1, T, NRESERVED, NRESERVED + 1) :- timer_svc(H, I, T, NRESERVED), clock(H, _, NRESERVED, _);
timer_state_prov40(H, I, T - 1, T, NRESERVED, NRESERVED + 1) :- timer_state(H, I, T, NRESERVED), T > 1, clock(H, _, NRESERVED, _), notin timer_cancel(H, I, NRESERVED);
timeout_prov41(H, I, NRESERVED) :- timer_state(H, I, 1, NRESERVED), clock(H, H, NRESERVED, _);
clock("a", "a", 1, 2);
clock("b", "b", 1, 2);
clock("C", "C", 1, 2);
clock("d", "d", 1, 2);
clock("a", "a", 1, 2);
clock("a", "b", 1, 2);
clock("a", "C", 1, 2);
clock("a", "d", 1, 2);
clock("b", "a", 1, 2);
clock("b", "b", 1, 2);
clock("b", "C", 1, 2);
clock("b", "d", 1, 2);
clock("C", "a", 1, 2);
clock("C", "b", 1, 2);
clock("C", "C", 1, 2);
clock("C", "d", 1, 2);
clock("d", "a", 1, 2);
clock("d", "b", 1, 2);
clock("d", "C", 1, 2);
clock("d", "d", 1, 2);
clock("a", "a", 2, 3);
clock("b", "b", 2, 3);
clock("C", "C", 2, 3);
clock("d", "d", 2, 3);
clock("a", "a", 2, 3);
clock("a", "b", 2, 3);
clock("a", "C", 2, 3);
clock("a", "d", 2, 3);
clock("b", "a", 2, 3);
clock("b", "b", 2, 3);
clock("b", "C", 2, 3);
clock("b", "d", 2, 3);
clock("C", "a", 2, 3);
clock("C", "b", 2, 3);
clock("C", "C", 2, 3);
clock("C", "d", 2, 3);
clock("d", "a", 2, 3);
clock("d", "b", 2, 3);
clock("d", "C", 2, 3);
clock("d", "d", 2, 3);
clock("a", "a", 3, 4);
clock("b", "b", 3, 4);
clock("C", "C", 3, 4);
clock("d", "d", 3, 4);
clock("a", "a", 3, 4);
clock("a", "b", 3, 4);
clock("a", "C", 3, 4);
clock("a", "d", 3, 4);
clock("b", "a", 3, 4);
clock("b", "b", 3, 4);
clock("b", "C", 3, 4);
clock("b", "d", 3, 4);
clock("C", "a", 3, 4);
clock("C", "b", 3, 4);
clock("C", "C", 3, 4);
clock("C", "d", 3, 4);
clock("d", "a", 3, 4);
clock("d", "b", 3, 4);
clock("d", "C", 3, 4);
clock("d", "d", 3, 4);
clock("a", "a", 4, 5);
clock("b", "b", 4, 5);
clock("C", "C", 4, 5);
clock("d", "d", 4, 5);
clock("a", "a", 4, 5);
clock("a", "b", 4, 5);
clock("a", "C", 4, 5);
clock("a", "d", 4, 5);
clock("b", "a", 4, 5);
clock("b", "b", 4, 5);
clock("b", "C", 4, 5);
clock("b", "d", 4, 5);
clock("C", "a", 4, 5);
clock("C", "b", 4, 5);
clock("C", "C", 4, 5);
clock("C", "d", 4, 5);
clock("d", "a", 4, 5);
clock("d", "b", 4, 5);
clock("d", "C", 4, 5);
clock("d", "d", 4, 5);
clock("a", "a", 5, 6);
clock("b", "b", 5, 6);
clock("C", "C", 5, 6);
clock("d", "d", 5, 6);
clock("a", "a", 5, 6);
clock("a", "b", 5, 6);
clock("a", "C", 5, 6);
clock("a", "d", 5, 6);
clock("b", "a", 5, 6);
clock("b", "b", 5, 6);
clock("b", "C", 5, 6);
clock("b", "d", 5, 6);
clock("C", "a", 5, 6);
clock("C", "b", 5, 6);
clock("C", "C", 5, 6);
clock("C", "d", 5, 6);
clock("d", "a", 5, 6);
clock("d", "b", 5, 6);
clock("d", "C", 5, 6);
clock("d", "d", 5, 6);
clock("a", "a", 6, 7);
clock("b", "b", 6, 7);
clock("C", "C", 6, 7);
clock("d", "d", 6, 7);
clock("a", "a", 6, 7);
clock("a", "b", 6, 7);
clock("a", "C", 6, 7);
clock("a", "d", 6, 7);
clock("b", "a", 6, 7);
clock("b", "b", 6, 7);
clock("b", "C", 6, 7);
clock("b", "d", 6, 7);
clock("C", "a", 6, 7);
clock("C", "b", 6, 7);
clock("C", "C", 6, 7);
clock("C", "d", 6, 7);
clock("d", "a", 6, 7);
clock("d", "b", 6, 7);
clock("d", "C", 6, 7);
clock("d", "d", 6, 7);
clock("a", "a", 7, 8);
clock("b", "b", 7, 8);
clock("C", "C", 7, 8);
clock("d", "d", 7, 8);
clock("a", "a", 7, 8);
clock("a", "b", 7, 8);
clock("a", "C", 7, 8);
clock("a", "d", 7, 8);
clock("b", "a", 7, 8);
clock("b", "b", 7, 8);
clock("b", "C", 7, 8);
clock("b", "d", 7, 8);
clock("C", "a", 7, 8);
clock("C", "b", 7, 8);
clock("C", "C", 7, 8);
clock("C", "d", 7, 8);
clock("d", "a", 7, 8);
clock("d", "b", 7, 8);
clock("d", "C", 7, 8);
clock("d", "d", 7, 8);
clock("a", "a", 8, 9);
clock("b", "b", 8, 9);
clock("C", "C", 8, 9);
clock("d", "d", 8, 9);
clock("a", "a", 8, 9);
clock("a", "b", 8, 9);
clock("a", "C", 8, 9);
clock("a", "d", 8, 9);
clock("b", "a", 8, 9);
clock("b", "b", 8, 9);
clock("b", "C", 8, 9);
clock("b", "d", 8, 9);
clock("C", "a", 8, 9);
clock("C", "b", 8, 9);
clock("C", "C", 8, 9);
clock("C", "d", 8, 9);
clock("d", "a", 8, 9);
clock("d", "b", 8, 9);
clock("d", "C", 8, 9);
clock("d", "d", 8, 9);
clock("a", "a", 9, 10);
clock("b", "b", 9, 10);
clock("C", "C", 9, 10);
clock("d", "d", 9, 10);
clock("a", "a", 9, 10);
clock("a", "b", 9, 10);
clock("a", "C", 9, 10);
clock("a", "d", 9, 10);
clock("b", "a", 9, 10);
clock("b", "b", 9, 10);
clock("b", "C", 9, 10);
clock("b", "d", 9, 10);
clock("C", "a", 9, 10);
clock("C", "b", 9, 10);
clock("C", "C", 9, 10);
clock("C", "d", 9, 10);
clock("d", "a", 9, 10);
clock("d", "b", 9, 10);
clock("d", "C", 9, 10);
clock("d", "d", 9, 10);
